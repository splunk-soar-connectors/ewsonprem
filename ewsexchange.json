{
    "appid": "badc5252-4a82-4a6d-bc53-d1e503857124",
    "name": "EWS for Exchange",
    "description": "This app performs <b>email ingestion</b>, <b>investigative</b> and <b>containment</b> actions on an on-premise <b>Exchange</b> installation.",
    "publisher": "Phantom",
    "type": "email",
    "main_module": "ewsonprem_connector.pyc",
    "app_version": "1.0.100",
    "utctime_updated": "2017-10-19T23:16:30.000000Z",
    "package_name": "phantom_ewsexchange",
    "product_vendor": "Microsoft",
    "product_name": "Exchange",
    "product_version_regex": ".*",
    "min_phantom_version": "3.0.190",
    "logo": "microsoft_logo.png",
    "license": "Copyright (c) Phantom Cyber Corporation 2016-2017",
    "configuration": {
        "url": {
            "data_type": "string",
            "order": 0,
            "description": "EWS URL",
            "required": true
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "description": "Verify server certificate",
            "required": false,
            "order": 1,
            "default": true
        },
        "username": {
            "data_type": "string",
            "order": 2,
            "description": "Username",
            "required": true
        },
        "password": {
            "data_type": "password",
            "order": 3,
            "description": "Password",
            "required": true
        },
        "poll_user": {
            "data_type": "string",
            "order": 4,
            "description": "User Email Mailbox (Test Connectivity and Poll)",
            "required": false
        },
        "use_impersonation": {
            "data_type": "boolean",
            "order": 5,
            "description": "Use Impersonation",
            "required": true,
            "default": false
        },
        "poll_folder": {
            "data_type": "string",
            "description": "Mailbox folder to be polled",
            "order": 8,
            "required": true,
            "default": "Inbox"
        },
        "ingest_manner": {
            "data_type": "string",
            "description": "How to ingest",
            "required": true,
            "order": 9,
            "value_list": [
                "oldest first",
                "latest first"
            ],
            "default": "oldest first"
        },
        "first_run_max_emails": {
            "data_type": "numeric",
            "order": 10,
            "description": "Maximum emails to poll first time",
            "default": "2000",
            "required": true
        },
        "max_containers": {
            "data_type": "numeric",
            "description": "Maximum emails for scheduled polling",
            "order": 11,
            "default": 100,
            "required": true
        },
        "extract_attachments": {
            "data_type": "boolean",
            "description": "Extract Attachments",
            "required": false,
            "order": 12,
            "default": true
        },
        "extract_urls": {
            "data_type": "boolean",
            "description": "Extract URLs",
            "required": false,
            "order": 13,
            "default": true
        },
        "extract_ips": {
            "data_type": "boolean",
            "description": "Extract IPs",
            "required": false,
            "order": 14,
            "default": true
        },
        "extract_domains": {
            "data_type": "boolean",
            "description": "Extract Domain Names",
            "required": false,
            "order": 15,
            "default": true
        },
        "extract_hashes": {
            "data_type": "boolean",
            "description": "Extract Hashes",
            "required": false,
            "order": 16,
            "default": true
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "description": "Validate the asset configuration for connectivity. This action runs a quick query on the device to check the connection and credentials.",
            "type": "test",
            "identifier": "test_asset_connectivity",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "description": "Search emails",
            "type": "investigate",
            "identifier": "run_query",
            "read_only": true,
            "verbose": "The <b>run query</b> action provides more than one method to search a user's mailbox:<br><ul><li>Simple Search<br>Use the <b>subject</b> and <b>body</b> parameters to search for substring matches. The <b>sender</b> parameter can be used to search for emails from a specific address. However it has been noticed that a match with the <b>sender</b> email address fails for emails that have been never sent or received, but instead have been created manually as a draft and copied to the searched mailbox. In such cases an AQS is a better option. If more than one parameter is specified, the search is an <b>And</b> of the given values including the <b>internet_message_id</b>.<br> <b>Simple Search</b> implements search filters. More details regarding search filters can be found on this <a href=\"https://msdn.microsoft.com/en-us/library/office/dn579422(v=exchg.150).aspx\">MSDN Link</a>.<br></li><li>Query Search<br>For a more fine-grained email search, the use of the <b>query</b> parameter is recommended. If this parameter is specified, the <b>subject</b>, <b>sender</b>, <b>internet_message_id</b> and <b>body</b> parmeters are ignored.<br>This parameter supports AQS queries to search in a Mailbox. More details regarding AQS keywords supported by Exchange can be found on this <a href=\"https://msdn.microsoft.com/en-us/library/office/dn579420(v=exchg.150).aspx\">MSDN Link.</a><br>Searching with AQS strings does have one notable restriction, however. The AQS search string will only match substrings from the start of a word. If a substring needs to be found in the middle of a word, use a <b>Simple Search</b>.<br>Some examples:<br><ul><li>All emails from user1@contoso.com or user2@contoso.com<br>from:user1@contoso.com OR from:user2@contoso.com</li><li>All emails containing the string <i>free vacations</i><br>body: free vacations</li><li>This will match an email with subject containing the word <i>Details</i> but not <i>Cadet</i><br>subject:det</li></li></ul></ul>If the <b>folder</b> parameter is not specified, each email based folder such as Inbox, Sent etc. will be searched, including the children (nested) folders.<br>The action supports searching a folder that is nested within another.<br>To search in such a folder, specify the complete path using the <b>'/'</b> (forward slash) as the separator.<br>For e.g. to search in a folder named <i>phishing</i> which is nested within (a child of) <i>Inbox</i>, set the value as <b>Inbox/phishing</b>.<br>NOTE: In some cases search results may return more emails than are visible in an email client. This is due to emails that have been just deleted, but not yet completely cleaned by the server.<br><br>The action supports limiting the number of emails returned using the <b>range</b> parameter. The input should be of the form <i>min_offset</i>-<i>max_offset</i>. The results are always sorted in <i>descending</i> order to place the latest emails at the top. For example to get the latest 10 emails that matched the filter, specify the range as 0-9. If multiple folders are searched for, then the range will be applied for each folder.<br>So if the folder being searched for example <i>Inbox</i> has a child (nested) folder called <i>phishing</i> and the range specified is 2-10, then the action will return 9 max emails for each folder. If the range parameter is not specified by default the action will use <b>0-10</b>.<br><br>NOTE: The <b>email</b> parameter is required.<br><br>Many actions such as <b>delete email</b> and <b>copy email</b> require the <b>exchange email ID</b> as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this as the value (including the &lt; and &gt; chars if present) of <b>internet_message_id</b> parameter and execute the action. The results will contain the <b>exchange email ID</b> of an email, which can be used as input for other actions.",
            "parameters": {
                "email": {
                    "description": "User's Email (Mailbox to search in)",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "email"
                    ],
                    "primary": true,
                    "required": true
                },
                "folder": {
                    "description": "Folder Name/Path (to search in)",
                    "data_type": "string",
                    "order": 1,
                    "required": false,
                    "default": "Inbox",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ]
                },
                "subject": {
                    "description": "Substring to search in Subject",
                    "data_type": "string",
                    "order": 2,
                    "required": false
                },
                "sender": {
                    "description": "Sender Email address to match",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "order": 3,
                    "primary": true,
                    "required": false
                },
                "body": {
                    "description": "Substring to search in Body",
                    "data_type": "string",
                    "order": 4,
                    "primary": false,
                    "required": false
                },
                "internet_message_id": {
                    "description": "Internet Message ID",
                    "data_type": "string",
                    "order": 5,
                    "primary": true,
                    "required": false,
                    "contains": [
                        "internet message id"
                    ]
                },
                "query": {
                    "description": "AQS string",
                    "data_type": "string",
                    "order": 5,
                    "primary": true,
                    "required": false
                },
                "range": {
                    "description": "Email range to return (min_offset-max_offset)",
                    "data_type": "string",
                    "order": 6,
                    "default": "0-10"
                }
            },
            "render": {
                "width": 12,
                "title": "Run Query",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_Name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@Id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Message ID",
                    "column_order": 6
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@ChangeKey",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_Name",
                    "data_type": "string",
                    "column_name": "Sender",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.t_Subject",
                    "data_type": "string",
                    "column_name": "Subject",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.t_InternetMessageId",
                    "data_type": "string",
                    "column_name": "Internet Message ID",
                    "column_order": 5,
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeReceived",
                    "data_type": "string",
                    "column_name": "Received Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.folder",
                    "data_type": "string",
                    "column_name": "Folder",
                    "contains": [
                        "mail folder"
                    ],
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.folder_path",
                    "data_type": "string",
                    "column_name": "Folder Path",
                    "contains": [
                        "mail folder path"
                    ],
                    "column_order": 4
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.emails_matched",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.body",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.internet_message_id",
                    "data_type": "string",
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.sender",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.parameter.range",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.folder",
                    "data_type": "string",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "delete email",
            "description": "Delete emails",
            "verbose": "This action supports a comma separated list of message IDs as input. This results in multiple emails getting deleted in a single call to the server. If impersonation is enabled on the asset, the <b>email</b> parameter is required, else <b>email</b> will be ignored.<br>The action requires the exchange email ID as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this <b>Internet Message ID</b> as input to the <b>run query</b> action to get the <b>exchange email ID</b> of an email.",
            "type": "contain",
            "identifier": "delete_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message IDs to delete (comma separated values supported)",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": true,
                    "allow_list": true
                },
                "email": {
                    "description": "Email of the mailbox owner (used during impersonation)",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "email"
                    ],
                    "primary": false,
                    "required": false
                }
            },
            "render": {
                "width": 12,
                "title": "Delete Email",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Status Message",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Message ID",
                    "column_order": 0
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "copy email",
            "description": "Copy an email to a folder",
            "verbose": "The action supports copying to a folder that is nested within another.<br>To copy to such a folder, specify the complete path using the <b>'/'</b> (forward slash) as the separator.<br>For example, to copy email to a folder named <i>phishing</i> which is nested within <i>Inbox</i>, set the value as <b>Inbox/phishing</b>.<br>The action requires the exchange email ID as input. Many times this value is not easily available, since not many email clients display it. However every email header has a value called <b>Message-ID</b> assigned to it. It's usually something like &lt;tS10Ncty2SyeJsjdNMsxV+dguQ+jd7RwiFgmZsLN@contoso.com&gt;. Use this <b>Internet Message ID</b> as input to the <b>run query</b> action to get the <b>exchange email ID</b> of an email.<br>The action will return the ID of the newly copied email in the data path <b>action_result.data.*.new_email_id</b>, however this value is not available for cross-mailbox or mailbox to public folder <b>copy email</b> actions (please see the documentation of the <a href=\"https://msdn.microsoft.com/en-us/library/office/aa565012(v=exchg.150).aspx\">CopyItem operation on MSDN</a>). However in such scenarios, do a <b>run query</b> on the new mailbox plus folder with a specific parameter like <b>Internet Message ID</b> to get the <b>Exchange email ID</b><br><br><b>Impersonation</b><p>Impersonation plays a big role in the <b>copy email</b> action, for reasons explained in this section, <b>copy email</b> is the only action that overrides the asset config parameter <b>use_impersonation</b>. By default, the action will <i>impersonate</i> the user specified in the <b>email</b> parameter, if impersonation is enabled (by setting the <b>dont_impersonate</b> action parameter to False or Unchecked).<br>However depending on the server configuration, this action might fail with an <i>Access Denied</i> error. If an email is being copied from one folder to another in the same mailbox, the action will succeed, however if the email is being copied from one mailbox's folder to a different mailbox, the impersonated user will require access to both the mailboxes. In this case the action might require to impersonate a user other than the one specified in the <b>email</b> parameter. In such a scenario use the <b>impersonate_email</b> to specify an alternate email to <i>impersonate</i>.<br>Set the <b>dont_impersonate</b> parameter to <b>True</b> to disable impersonation all together. This value will override the one configured on the asset. The default value of this param is <b>False</b>.</p>",
            "type": "generic",
            "identifier": "copy_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message ID to copy",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": true
                },
                "ph": {
                    "data_type": "ph",
                    "order": 1
                },
                "email": {
                    "description": "Destination Mailbox (Email)",
                    "data_type": "string",
                    "order": 2,
                    "contains": [
                        "email"
                    ],
                    "primary": true,
                    "required": true
                },
                "folder": {
                    "description": "Destination Mail Folder Name/Path",
                    "data_type": "string",
                    "order": 3,
                    "primary": true,
                    "required": true,
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ]
                },
                "impersonate_email": {
                    "description": "Impersonation Email",
                    "data_type": "string",
                    "order": 4,
                    "primary": false,
                    "required": false,
                    "contains": [
                        "email"
                    ]
                },
                "dont_impersonate": {
                    "description": "Don't use impersonation",
                    "data_type": "boolean",
                    "order": 5,
                    "primary": false,
                    "required": false,
                    "default": false
                }
            },
            "render": {
                "width": 12,
                "title": "Copy Email",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "column_name": "Status Message",
                    "column_order": 4
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Source Message ID",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "column_name": "User Email",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.parameter.folder",
                    "data_type": "string",
                    "column_name": "Folder",
                    "contains": [
                        "mail folder",
                        "mail folder path"
                    ],
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.new_email_id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Destination Message ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.dont_impersonate",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.parameter.impersonate_email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "get email",
            "description": "Get an email from the server",
            "verbose": "Every container that is created by the app, has the following values:<ul><li>The container ID, that is generated by the Phantom platform.</li><li>The Source ID that the app equates to the email ID on the server if known or the vault id if asked to parse from the vault.</li><li>The raw_email data in the container's data field is set to the RFC822 format of the email.</li></ul>This action parses email data and if specified creates containers and artifacts. The email data to parse is either extracted from the remote server if an email ID is specified, from a Phantom container, if the <b>container_id</b> is specified or from the vault item if the <b>vault_id</b> is specified.<br>If all three parameters are specified, the action will use the <b>container_id</b>.<br>The data paths differ depending on where the email data is parsed from.<br><br><p>If parsed from the server:<br><ul><li>The data path <b>action_result.data.*.t_MimeContent.#text</b> contains the email in RFC822 format, but base64 encoded.</li><li>The data path <b>action_result.data.*.t_Body.#text</b> contains the email body.</li><li>The widget for this action will render a text version of the email body if possible.</li><li>If impersonation is enabled on the asset, the <b>email</b> parameter is required, else <b>email</b> will be ignored.</li></ul></p><p>If parsed from the container or vault:<br><ul><li>The widget does not render the email body.</li><li>The email headers are listed in a table.</li></ul></p><p>If <b>ingest_email</b> is set to </b>True</b>:<br><ul><li>The ID of the container created or updated will be set in the <b>action_result.summary.container_id</b> data path</li><li>The widget will display this ID as <b>Ingested Container ID</b></li></ul></p>Do note that any containers and artifacts created will use the label configured in the asset.<br>The action will fail if the vault item asked to parse and ingest is not an email item.",
            "type": "investigate",
            "identifier": "get_email",
            "read_only": true,
            "parameters": {
                "id": {
                    "description": "Message ID to get",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": false,
                    "allow_list": true
                },
                "email": {
                    "description": "Email of the mailbox owner (used during impersonation)",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "email"
                    ],
                    "primary": false,
                    "required": false
                },
                "container_id": {
                    "description": "Container ID to get email data from",
                    "data_type": "numeric",
                    "order": 2,
                    "contains": [
                        "phantom container id"
                    ],
                    "primary": true,
                    "required": false,
                    "allow_list": false
                },
                "vault_id": {
                    "description": "Vault ID to get email from",
                    "data_type": "string",
                    "order": 3,
                    "contains": [
                        "vault id"
                    ],
                    "primary": true,
                    "required": false,
                    "allow_list": true
                },
                "ingest_email": {
                    "description": "Create containers and artifacts",
                    "data_type": "boolean",
                    "order": 4,
                    "primary": false,
                    "required": false,
                    "default": false
                },
                "use_current_container": {
                    "description": "Create artifacts in the same container",
                    "data_type": "boolean",
                    "order": 5,
                    "primary": false,
                    "required": false,
                    "default": false
                }
            },
            "render": {
                "width": 12,
                "title": "Get Email",
                "type": "custom",
                "view": "ewsonprem_view.display_email",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.data.*.t_Body.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Body.@BodyType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_Name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_RoutingType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Size",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_IsRead",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@Id",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@ChangeKey",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_Name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_RoutingType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Subject",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.@CharacterSet",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Sensitivity",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeSent",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_IsAssociated",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_InternetMessageId",
                    "data_type": "string",
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ForwardItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ReplyAllToItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ResponseObjects.t_ReplyToItem",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_IsDeliveryReceiptRequested",
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_Name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_RoutingType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_HasAttachments",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeCreated",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeReceived",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_LastModifiedTime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_IsReadReceiptRequested",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.subject",
                    "data_type": "string",
                    "column_name": "Subject",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.summary.sent_time",
                    "data_type": "string",
                    "column_name": "Sent Time",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.summary.create_time",
                    "data_type": "string",
                    "column_name": "Create Time",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "contains": [
                        "vault id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "contains": [
                        "exchange email id"
                    ],
                    "column_name": "Email ID",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Date",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.From",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Sender",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-UIDL",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Subject",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Received",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mailer",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-MimeOLE",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Importance",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Message-ID",
                    "data_type": "string",
                    "contains": [
                        "internet message id"
                    ]
                },
                {
                    "data_path": "action_result.data.*.X-Priority",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Return-Path",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Content-Type",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Delivered-To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.MIME-Version",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-CTCH-RefID",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Account-Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Spam-Status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mozilla-Keys",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.Mail-Filter-Gateway",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-SOHU-Antispam-Bayes",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-ID",
                    "data_type": "string"
                },
                {
                    "contains": [
                        "email"
                    ],
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-To",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-SOHU-Antispam-Language",
                    "data_type": "string"
                },
                {
                    "contains": [
                        "email"
                    ],
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-From",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-SpamScore",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.X-Mail-Filter-Gateway-SpamDetectionEngine",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ]
                },
                {
                    "data_path": "action_result.summary.email_id",
                    "data_type": "numeric",
                    "contains": [
                        "exchange email id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ]
                },
                {
                    "data_path": "action_result.parameter.ingest_email",
                    "data_type": "boolean"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "list addresses",
            "description": "Get the email addresses that make up a Distribution List",
            "verbose": "The <b>group</b> parameter, supports as input the email (for e.g. dleng@corp.contoso.com) or the name (for e.g. dleng) of the distribution list.",
            "type": "investigate",
            "identifier": "expand_dl",
            "read_only": true,
            "parameters": {
                "group": {
                    "description": "Distribution List to expand",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "email",
                        "exchange distribution list"
                    ],
                    "primary": true,
                    "required": true
                }
            },
            "render": {
                "width": 12,
                "title": "List Addresses",
                "type": "table",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.data.*.t_Name",
                    "data_type": "string",
                    "column_name": "User Name",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.data.*.t_MailboxType",
                    "data_type": "string",
                    "column_name": "Mailbox Type",
                    "column_order": 3
                },
                {
                    "data_path": "action_result.data.*.t_RoutingType",
                    "data_type": "string",
                    "column_name": "Routing Type",
                    "column_order": 2
                },
                {
                    "data_path": "action_result.data.*.t_EmailAddress",
                    "data_type": "string",
                    "contains": [
                        "email"
                    ],
                    "column_name": "Email",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_entries",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.group",
                    "data_type": "string",
                    "contains": [
                        "email",
                        "exchange distribution list"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "lookup email",
            "description": "Resolve an Alias name or email address, into mailboxes",
            "type": "investigate",
            "identifier": "resolve_name",
            "read_only": true,
            "parameters": {
                "email": {
                    "description": "Name to resolve",
                    "data_type": "string",
                    "order": 0,
                    "primary": true,
                    "required": true,
                    "contains": [
                        "exchange alias",
                        "email"
                    ]
                }
            },
            "render": {
                "width": 12,
                "title": "Resolve Name",
                "type": "custom",
                "view": "ewsonprem_view.display_resolve_names",
                "height": 5
            },
            "output": [
                {
                    "data_path": "action_result.data.*.t_Contact.t_DisplayName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_ContactSource",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_EmailAddresses.*.@Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_EmailAddresses.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_Name",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_MailboxType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_RoutingType",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Mailbox.t_EmailAddress",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_entries",
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "contains": [
                        "exchange alias",
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Surname",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Initials",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_GivenName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Manager",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_JobTitle",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_Department",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_CompanyName",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhoneNumbers.t_Entry.*.@Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhoneNumbers.t_Entry.*.#text",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_OfficeLocation",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.@Key",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_City",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_State",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_Street",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_PostalCode",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.t_Contact.t_PhysicalAddresses.t_Entry.t_CountryOrRegion",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "update email",
            "description": "Update an email on the server",
            "verbose": "Currently this action only updates the category and subject of an email. To set multiple categories, please pass a comma separated list to the <b>category</b> parameter",
            "type": "generic",
            "identifier": "update_email",
            "read_only": false,
            "parameters": {
                "id": {
                    "description": "Message ID to update",
                    "data_type": "string",
                    "order": 0,
                    "contains": [
                        "exchange email id"
                    ],
                    "primary": true,
                    "required": false
                },
                "email": {
                    "description": "Email of the mailbox owner (used during impersonation)",
                    "data_type": "string",
                    "order": 1,
                    "contains": [
                        "email"
                    ],
                    "primary": false,
                    "required": false
                },
                "subject": {
                    "description": "Subject to set",
                    "data_type": "string",
                    "order": 2,
                    "required": false,
                    "allow_list": true
                },
                "category": {
                    "description": "Categories to set",
                    "data_type": "string",
                    "order": 3,
                    "primary": false,
                    "required": false,
                    "allow_list": true
                }
            },
            "render": {
                "type": "table"
            },
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string",
                    "example_values": [
                        "success"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeCreated",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-05T20:19:58Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Categories",
                    "data_type": "string",
                    "example_values": [
                        "red"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.#text",
                    "data_type": "string",
                    "example_values": [
                        "Attached .msg file. Hello"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Body.@BodyType",
                    "data_type": "string",
                    "example_values": [
                        "Text"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Subject",
                    "data_type": "string",
                    "example_values": [
                        "Both value are modified"
                    ],
                    "column_name": "Subject",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.t_HasAttachments",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_Name",
                    "data_type": "string",
                    "example_values": [
                        "Phantom User"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "Mailbox"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ToRecipients.t_Mailbox.*.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "phantom@deshaw.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_InternetMessageId",
                    "data_type": "string",
                    "example_values": [
                        "<81c761fe-caa8-f924-f65d-079382c1ad0b@deshaw.com>"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-31T01:09:20Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.@CharacterSet",
                    "data_type": "string",
                    "example_values": [
                        "UTF-8"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_MimeContent.#text",
                    "data_type": "string",
                    "example_values": [
                        "RnJvbTogUGhhbnRvbSBVc2VyIDxwaGFudG9tQGRlc2hhdy5jb20+DQpUbzogUGhhbnRvbSBVc2VyIDxwaGFudG9tQGRlc2hhdy5jb20+LCBQaGFudG9tIFVzZXIgPHBoYW50b21AZGVzaGF3LmNvbT4NClN1YmplY3Q6IEJvdGggdmFsdWUgYXJlIG1vZGlmaWVkDQpUaHJlYWQtVG9waWM6IEJvdGggdmFsdWUgYXJlIG1vZGlmaWVkDQpUaHJlYWQtSW5kZXg6IEFRSFRVZDhvcEwyMnhGUTY2VXllUGhCNmpHdzRJQT09DQpEYXRlOiBUdWUsIDMgT2N0IDIwMTcgMjE6MzE6MjAgKzAwMDANCk1lc3NhZ2UtSUQ6IDw4MWM3NjFmZS1jYWE4LWY5MjQtZjY1ZC0wNzkzODJjMWFkMGJAZGVzaGF3LmNvbT4NCktleXdvcmRzOiBZZWxsb3csQmx1ZSxQdXJwbGUscmVkDQpDb250ZW50LUxhbmd1YWdlOiBlbi1VUw0KWC1NUy1IYXMtQXR0YWNoOiB5ZXMNClgtTVMtVE5FRi1Db3JyZWxhdG9yOg0KeC1tcy1leGNoYW5nZS1pbWFwYXBwZW5kc3RhbXA6IGRjMS5kZXNoYXcuY29tICgxNC4wMy4wMjI3LjAwMCkNCkNvbnRlbnQtVHlwZTogbXVsdGlwYXJ0L21peGVkOw0KCWJvdW5kYXJ5PSJfMDAyXzgxYzc2MWZlY2FhOGY5MjRmNjVkMDc5MzgyYzFhZDBiZGVzaGF3Y29tXyINCk1JTUUtVmVyc2lvbjogMS4wDQoNCi0tXzAwMl84MWM3NjFmZWNhYThmOTI0ZjY1ZDA3OTM4MmMxYWQwYmRlc2hhd2NvbV8NCkNvbnRlbnQtVHlwZTogdGV4dC9wbGFpbjsgY2hhcnNldD0idXMtYXNjaWkiDQpDb250ZW50LUlEOiA8Nzg5MzIzOUU5NDA3NTY0NDg0QUI2QkFDMkQ5OTk3REFAZGVzaGF3LmNvbT4NCg0KQXR0YWNoZWQgLm1zZyBmaWxlLiBIZWxsbw0KLS1fMDAyXzgxYzc2MWZlY2FhOGY5MjRmNjVkMDc5MzgyYzFhZDBiZGVzaGF3Y29tXw0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW07IG5hbWU9InRlc3QubXNnIg0KQ29udGVudC1EZXNjcmlwdGlvbjogdGVzdC5tc2cNCkNvbnRlbnQtRGlzcG9zaXRpb246IGF0dGFjaG1lbnQ7IGZpbGVuYW1lPSJ0ZXN0Lm1zZyI7IHNpemU9NTUzNjA7DQoJY3JlYXRpb24tZGF0ZT0iVHVlLCAwMyBPY3QgMjAxNyAyMTozMTowNSBHTVQiOw0KCW1vZGlmaWNhdGlvbi1kYXRlPSJUdWUsIDAzIE9jdCAyMDE3IDIxOjMxOjA1IEdNVCINCkNvbnRlbnQtSUQ6IDw3NTE4MjI2MjAyRDIxQzQzOTdFRTFDQjFFMkU1NDBDN0BkZXNoYXcuY29tPg0KQ29udGVudC1UcmFuc2Zlci1FbmNvZGluZzogYmFzZTY0DQoNCjBNOFI0S0d4R3VFQUFBQUFBQUFBQUFBQUFBQUFBQUFBUGdBREFQNy9DUUFHQUFBQUFBQUFBQUFBQUFBQkFBQUFBZ0FBQUFBQUFBQUENCkVBQUFHZ0FBQUFRQUFBRCsvLy8vQUFBQUFBTUFBQUQvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vOVMNCkFHOEFid0IwQUNBQVJRQnVBSFFBY2dCNUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBRmdBRkFQLy8vLy8vLy8vL0pBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUR3ak5kR2dUSFQNCkFSc0FBQUJBYXdBQUFBQUFBRjhBWHdCd0FISUFid0J3QUdVQWNnQjBBR2tBWlFCekFGOEFkZ0JsQUhJQWN3QnBBRzhBYmdBeEFDNEENCk1BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXdBQUlBVndBQUFGVUFBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBSFFFQUFHQUlBQUFBQUFBQVh3QmZBRzRBWVFCdEFHVUFhUUJrQUY4QWRnQmxBSElBY3dCcEFHOEENCmJnQXhBQzRBTUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNnQUFRSC8vLy8vLy8vLy80RUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQkNJMEVhQk1kTUI0R1hYUm9FeDB3RUFBQUFBQUFBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0ENCk1RQXVBREFBWHdBd0FFVUFNQUEwQURBQU1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQWYvLy8vLy8NCi8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFQUFBQlFBQUFBQUFBQUFBUUENCkFBRDkvLy8vLy8vLy8vLy8vLzhGQUFBQUJnQUFBQWNBQUFBSUFBQUFDUUFBQUFvQUFBQUxBQUFBREFBQUFBMEFBQUFPQUFBQUR3QUENCkFCQUFBQUFSQUFBQUVnQUFBQk1BQUFBVUFBQUFGUUFBQUJZQUFBQVhBQUFBR0FBQUFCa0FBQUFkQUFBQU5BQUFBQndBQUFBbUFBQUENCkhnQUFBQjhBQUFBZ0FBQUFJUUFBQUNJQUFBQWpBQUFBSkFBQUFDVUFBQUJUQUFBQUp3QUFBQ2dBQUFBcEFBQUFLZ0FBQUNzQUFBQXMNCkFBQUFMUUFBQUM0QUFBQXZBQUFBTUFBQUFERUFBQUF5QUFBQU13QUFBRFVBQUFCT0FBQUFOZ0FBQURjQUFBQTRBQUFBT1FBQUFEb0ENCkFBQTdBQUFBUEFBQUFEMEFBQUErQUFBQVB3QUFBRUFBQUFCQkFBQUFRZ0FBQUVNQUFBQkVBQUFBVHdBQUFFWUFBQUJIQUFBQVNBQUENCkFFa0FBQUJLQUFBQVN3QUFBRXdBQUFCTkFBQUEvdi8vLzJRQUFBQlFBQUFBVVFBQUFGSUFBQUJZQUFBQVZBQUFBRlVBQUFCV0FBQUENClZ3QUFBUDcvLy85WkFBQUFXZ0FBQUZzQUFBQmNBQUFBWFFBQUFGNEFBQUJmQUFBQVlBQUFBR0VBQUFCaUFBQUFZd0FBQUdVQUFBRCsNCi8vLy9aZ0FBQUdjQUFBQm9BQUFBYVFBQUFHb0FBQUQrLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1VnQnYNCkFHOEFkQUFnQUVVQWJnQjBBSElBZVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQllBQlFELy8vLy8vLy8vL3lRQUFBQUxEUUlBQUFBQUFNQUFBQUFBQUFCR0FBQUFBQUFBQUFBQUFBQUFrQlBaUm9FeDB3RWINCkFBQUFRR3NBQUFBQUFBQmZBRjhBY0FCeUFHOEFjQUJsQUhJQWRBQnBBR1VBY3dCZkFIWUFaUUJ5QUhNQWFRQnZBRzRBTVFBdUFEQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU1BQUNBRmNBQUFCVkFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQjBCQUFCZ0NBQUFBQUFBQUY4QVh3QnVBR0VBYlFCbEFHa0FaQUJmQUhZQVpRQnlBSE1BYVFCdkFHNEENCk1RQXVBREFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFvQUFFQi8vLy8vLy8vLy8rQkFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQVFpTkJHZ1RIVEFlQmwxMGFCTWRNQkFBQUFBQUFBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUENCkxnQXdBRjhBTUFCRkFEQUFOQUF3QURBQU1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0gvLy8vLy8vLy8NCi8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQUFBQVVBQUFBQUFBQUFELy8vLy8NCi8vLy8vd1FBQUFEOS8vLy9CUUFBQUFZQUFBQUhBQUFBQ0FBQUFBa0FBQUFLQUFBQUN3QUFBQXdBQUFBTkFBQUFEZ0FBQUE4QUFBQVENCkFBQUFFUUFBQUJJQUFBQVRBQUFBRkFBQUFCVUFBQUFXQUFBQUZ3QUFBQmdBQUFBWkFBQUFIUUFBQURRQUFBQWNBQUFBSmdBQUFCNEENCkFBQWZBQUFBSUFBQUFDRUFBQUFpQUFBQUl3QUFBQ1FBQUFBbEFBQUFVd0FBQUNjQUFBQW9BQUFBS1FBQUFDb0FBQUFyQUFBQUxBQUENCkFDMEFBQUF1QUFBQUx3QUFBREFBQUFBeEFBQUFNZ0FBQURNQUFBQTFBQUFBVGdBQUFEWUFBQUEzQUFBQU9BQUFBRGtBQUFBNkFBQUENCk93QUFBRHdBQUFBOUFBQUFQZ0FBQUQ4QUFBQkFBQUFBUVFBQUFFSUFBQUJEQUFBQVJBQUFBRThBQUFCR0FBQUFSd0FBQUVnQUFBQkoNCkFBQUFTZ0FBQUVzQUFBQk1BQUFBVFFBQUFQNy8vLzlrQUFBQVVBQUFBRkVBQUFCU0FBQUFXQUFBQUZRQUFBQlZBQUFBVmdBQUFGY0ENCkFBRCsvLy8vV1FBQUFGb0FBQUJiQUFBQVhBQUFBRjBBQUFCZUFBQUFYd0FBQUdBQUFBQmhBQUFBWWdBQUFHTUFBQUJsQUFBQS92Ly8NCi8yWUFBQUJuQUFBQWFBQUFBR2tBQUFCcUFBQUEvdi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLzE4QVh3QnoNCkFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUFSUUF3QURNQU1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQXFBQUlCR0FBQUFDQUFBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQS92Ly8NCi93QUFBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTUFCRkFEQUFNZ0F3QURBQU1RQkdBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnRC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBRCsvLy8vQUFBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXdBREFBTVFCQkFEQUENCk1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQVFJQUFBQUhBQUFBLy8vLy93QUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJ3QkFBQVFBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEENCk1BQmZBREFBTUFBekFFSUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUJVQUFBQUZJQUFBRC8NCi8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHZ0VBQUdjQUFBQUFBQUFBWHdCZkFITUENCmRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU1BQXdBRE1BUmdBd0FERUFNQUF5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFDb0FBZ0VHQUFBQUNnQUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBWUFRQUENCmVBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F3QURBQU5BQXdBREFBTUFBeEFFWUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FmLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFCY0JBQUFVQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUFNQUEwQURFQU1BQXgNCkFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCQ1FBQUFBc0FBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRlFFQUFJQUFBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXcNCkFGOEFNQUF3QURRQU1nQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnSC8vLy8vLy8vLy8vLy8NCi8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVVBUUFBSUFBQUFBQUFBQUJmQUY4QWN3QjENCkFHSUFjd0IwQUdjQU1RQXVBREFBWHdBd0FEQUFOQUF6QURBQU1RQXdBRElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCktnQUNBUWdBQUFBUUFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJJQkFBQjQNCkFBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBREFBTUFBMEFEUUFNQUF3QURFQVJnQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQi8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUVRRUFBQlFBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU1BQXdBRFVBTVFBd0FERUENCk1BQXlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0VOQUFBQUR3QUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQQVFBQVh3QUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUENClh3QXdBREFBTlFBeUFEQUFNUUF3QURJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FmLy8vLy8vLy8vLy8vLy8NCi93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBMEJBQUJmQUFBQUFBQUFBRjhBWHdCekFIVUENCllnQnpBSFFBWndBeEFDNEFNQUJmQURBQU1BQTJBRFFBTUFBd0FERUFSZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXENCkFBSUJEZ0FBQUJJQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBREFFQUFBUUENCkFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFNQUF3QURZQU5RQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQ29BQWdILy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBSUFRQUF4Z0FBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBd0FEQUFOd0F3QURBQU1BQXgNCkFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBUkVBQUFBVEFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWNCQUFBeUFBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmYNCkFEQUFNQUEzQURFQU1BQXhBREFBTWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQi8vLy8vLy8vLy8vLy8vLy8NCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJnRUFBQnNBQUFBQUFBQUFYd0JmQUhNQWRRQmkNCkFITUFkQUJuQURFQUxnQXdBRjhBTUFBd0FEY0FOUUF3QURBQU1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0ENCkFnRU1BQUFBQkFBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGQVFBQUJBQUENCkFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXdBREFBTndBMkFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFLZ0FDQWYvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFJQkFBQzJBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURBQU1BQTNBRGNBTUFBd0FERUENClJnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUJGUUFBQUJjQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUUVBQUFRQUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEENCk1BQXdBRGNBT0FBd0FEQUFNUUJHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdILy8vLy8vLy8vLy8vLy8vOEENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEK0FBQUF0Z0FBQUFBQUFBQmZBRjhBY3dCMUFHSUENCmN3QjBBR2NBTVFBdUFEQUFYd0F3QURBQU53QkVBREFBTUFBeEFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUMNCkFSWUFBQUFhQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRVVBQUFDWUVRQUENCkFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUFNQUEzQUVZQU1BQXhBREFBTWdBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQXFBQUlCLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBL0FBQUFFUUFBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTUFCREFERUFPUUF3QURFQU1BQXkNCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnRVpBQUFBSEFBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRDZBQUFBZ0FBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXcNCkFFTUFNUUJCQURBQU1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQWYvLy8vLy8vLy8vLy8vLy93QUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVBrQUFBQWdBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnoNCkFIUUFad0F4QUM0QU1BQmZBREFBUXdBeEFFUUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUENCkd3QUFBQjRBQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE5d0FBQUdjQUFBQUENCkFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU1BQkRBREVBUlFBd0FEQUFNUUJHQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFDb0FBZ0QvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUQyQUFBQUJBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F3QUVNQU1RQkdBREFBTUFBeEFFWUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FSMEFBQUFGQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQSUFBQURHQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUENClJRQXdBRFVBTUFBd0FERUFSZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCQXdBQUFGRUFBQUQvLy8vL0FBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBOFFBQUFBb0FBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUENCmRBQm5BREVBTGdBd0FGOEFNQUJGQURRQVJBQXdBREVBTUFBeUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnRWYNCkFBQUFJZ0FBQVAvLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRHdBQUFBSEFBQUFBQUENCkFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBd0FFVUFOQUJGQURBQU1RQXdBRElBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUtnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBTzhBQUFBY0FBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBREFBUlFBMUFEZ0FNQUF4QURBQU1nQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQklRQUFBQ01BQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQTdnQUFBQndBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU1BQkYNCkFEVUFPUUF3QURFQU1BQXlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0gvLy8vLy8vLy8vLy8vLy84QUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUR0QUFBQUhBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjANCkFHY0FNUUF1QURBQVh3QXdBRVlBTUFBekFEQUFNUUF3QURJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FSUUENCkFBQTBBQUFBLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFPd0FBQUFRQUFBQUFBQUENCkFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURFQU1BQXhBRE1BTUFBeEFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBcUFBSUEvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFzd0FBQURjT0FBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFNUUF3QURNQU5RQXdBREFBTVFCR0FBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdGVUFBQUFKd0FBQVAvLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDd0FBQUFoZ0FBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBeEFEQUENCk13QTVBREFBTUFBeEFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSzRBQUFCK0FBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUENClp3QXhBQzRBTUFCZkFERUFNQUEwQURJQU1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQkpnQUENCkFDb0FBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXJBQUFBSDRBQUFBQUFBQUENClh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTXdBd0FEQUFRZ0F3QURFQU1BQXlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUNvQUFnSC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQ3JBQUFBRUFBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXpBREFBTVFBd0FEQUFNUUF3QURJQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQVNrQUFBQXJBQUFBLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUtrQUFBQkdBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURNQU1BQXgNCkFETUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUIvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFBQUJBQUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm4NCkFERUFMZ0F3QUY4QU13QXdBREVBTkFBd0FERUFNQUF5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdFb0FBQUENCk1BQUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDbkFBQUFEQUFBQUFBQUFBQmYNCkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F6QURBQU1RQTVBREFBTVFBd0FESUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBS2dBQ0FmLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFLWUFBQUFRQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFETUFNQUF4QUVJQU1BQXhBREFBTWdBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCTFFBQUFDOEFBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBcFFBQUFBd0FBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTXdCR0FFWUENCk9BQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnSC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ2tBQUFBSUFBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0ENCk1RQXVBREFBWHdBekFFWUFSZ0E1QURBQU1RQXdBRElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQVM0QUFBQXkNCkFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtJQUFBQ0FBQUFBQUFBQUFGOEENClh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBRE1BUmdCR0FFRUFNQUF3QURFQVJnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFxQUFJQi8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCm9RQUFBQ0FBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU13QkdBRVlBUWdBd0FERUFNQUF5QUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0V4QUFBQU13QUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUNmQUFBQWdBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0EwQURBQU1nQXkNCkFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FmLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKNEFBQUFFQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXgNCkFDNEFNQUJmQURRQU1BQXlBRE1BTUFBd0FERUFSZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCTEFBQUFEd0ENCkFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBbWdBQUFNWUFBQUFBQUFBQVh3QmYNCkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFOQUF3QURJQU5BQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQ29BQWdILy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ1oNCkFBQUFCQUFBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBMEFEQUFNZ0ExQURBQU1BQXhBRVlBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBVFVBQUFBM0FBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBSlVBQUFER0FBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBRFFBTUFBekFEQUENCk1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQi8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWxBQUFBQ0FBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUENCkxnQXdBRjhBTkFBd0FETUFNUUF3QURBQU1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0UyQUFBQU9nQUENCkFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNUQUFBQUlBQUFBQUFBQUFCZkFGOEENCmN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QTBBREFBTXdBMEFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFLZ0FDQWYvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKSUENCkFBQVVBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURRQU1BQXpBRFVBTUFBd0FERUFSZ0FBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUJPUUFBQURzQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFrUUFBQUJRQUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFOQUF3QURNQU9BQXcNCkFEQUFNUUJHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdILy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDUUFBQUFJQUFBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXUNCkFEQUFYd0EwQURBQU13QTVBREFBTUFBeEFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBVGdBQUFCRUFBQUENCi8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSThBQUFBZ0FBQUFBQUFBQUY4QVh3QnoNCkFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEVUFSQUF3QURFQU1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQXFBQUlCLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWpnQUENCkFESUFBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTlFCRUFEQUFNZ0F3QURBQU1RQkdBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnRTlBQUFBUHdBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQ05BQUFBTWdBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QTFBRVlBUlFBMUFEQUENCk1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQWYvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUl3QUFBQTZBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEENCk1BQmZBRFlBTlFCRkFEQUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUJQZ0FBQUVJQUFBRC8NCi8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFpd0FBQUJZQUFBQUFBQUFBWHdCZkFITUENCmRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU5nQTFBRVVBTVFBd0FERUFNQUF5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFDb0FBZ0gvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDS0FBQUENCkZnQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0EyQURVQVJRQXlBREFBTVFBd0FESUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FVRUFBQUJEQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFJa0FBQUFXQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEWUFOUUJGQURNQU1BQXgNCkFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBaUFBQUFCY0FBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXcNCkFGOEFPQUF3QURBQU5nQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnQkFBQUFBU0FBQUFQLy8NCi8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0hBQUFBQ2dBQUFBQUFBQUJmQUY4QWN3QjENCkFHSUFjd0IwQUdjQU1RQXVBREFBWHdBNEFEQUFNQUEzQURBQU1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCktnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlBQUFBQ3cNCkFRQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBRGdBTUFBd0FEZ0FNQUF3QURFQVJnQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQlJRQUFBRWNBQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQWZ3QUFBQVFBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU9BQXdBREFBUWdBd0FEQUENCk1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0gvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUIrQUFBQUVBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUENClh3QTRBREFBTUFCREFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FVWUFBQUJNQUFBQS8vLy8NCi93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFIMEFBQUFjQUFBQUFBQUFBRjhBWHdCekFIVUENCllnQnpBSFFBWndBeEFDNEFNQUJmQURnQU1BQXdBRVVBTUFBd0FERUFSZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXENCkFBSUIvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZkFBQUFBUUENCkFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFPQUF3QURBQVJnQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQ29BQWdGSkFBQUFTd0FBQVAvLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFCN0FBQUFRQUFBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBNEFEQUFNUUF5QURBQU1BQXgNCkFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSG9BQUFBUUFBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmYNCkFEZ0FNQUF4QURZQU1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQVNnQUFBRTRBQUFELy8vLy8NCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWNnQUFBT0lCQUFBQUFBQUFYd0JmQUhNQWRRQmkNCkFITUFkQUJuQURFQUxnQXdBRjhBT0FBd0FERUFOd0F3QURBQU1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0ENCkFnSC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJyQUFBQXdBRUENCkFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QTRBREFBTVFBNEFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFLZ0FDQVUwQUFBQUJBQUFBLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUZzQUFBRFFBd0FBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURnQU1BQXhBRGtBTUFBd0FERUENClJnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUEvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFSUUFBQUVZRkFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEENCk1BQXdBRE1BTndBd0FEQUFNUUJHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdELy8vLy8vLy8vLy8vLy8vOEENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCRUFBQUFPZ0FBQUFBQUFBQmZBRjhBY3dCMUFHSUENCmN3QjBBR2NBTVFBdUFEQUFYd0F3QUVVQU1RQkVBREFBTUFBeEFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUMNCkFQLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBeUFBQUENCkFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUFNQUF6QUVRQU1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQXFBQUlBLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBUXdBQUFBZ0FBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTVFBd0FEQUFNQUF3QURBQU1RQkcNCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnRC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXlBQUFBSUFRQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXgNCkFEQUFNQUE1QURBQU1RQXdBRElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQVZNQUFBQWxBQUFBLy8vLy93QUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFrQUFBQVdDZ0FBQUFBQUFGOEFYd0J5QUdVQVl3QnANCkFIQUFYd0IyQUdVQWNnQnpBR2tBYndCdUFERUFMZ0F3QUY4QUl3QXdBREFBTUFBd0FEQUFNQUF3QURBQUFBQUFBQUFBQUFBNkFBRUINCi8vLy8vMVlBQUFCdEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUN3OE5aR2dUSFRBY0FYMTBhQk1kTUJBQUFBQUFBQUFBQUENCkFBQUFYd0JmQUhJQVpRQmpBR2tBY0FCZkFIWUFaUUJ5QUhNQWFRQnZBRzRBTVFBdUFEQUFYd0FqQURBQU1BQXdBREFBTUFBd0FEQUENCk1RQUFBQUFBQUFBQUFEb0FBUUQvLy8vLy8vLy8vMXNBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFNQVgxMGFCTWRNQjRHWFgNClJvRXgwd0VBQUFBQUFBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0E0QURBQU1RQkJBREFBTUFBeEFFWUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FVOEFBQUJZQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ0FBQUFzQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEZ0ENCk1BQXhBRUlBTUFBd0FERUFSZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlBLy8vLy8vLy8vLy8vLy8vL0FBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXdBQUFDb0JBQUFBQUFBQVh3QmZBSEFBY2dCdkFIQUENClpRQnlBSFFBYVFCbEFITUFYd0IyQUdVQWNnQnpBR2tBYndCdUFERUFMZ0F3QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURBQUFnRnENCkFBQUEvLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQmZBUUFBQ0FJQUFBQUENCkFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBekFEQUFNQUF4QURBQU1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUtnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBRjRCQUFBd0FBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBRE1BTUFBd0FESUFNQUF3QURFQVJnQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQlhnQUFBR1lBQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVhRRUFBQVFBQUFBQUFBQUEvdi8vL3dJQUFBRCsvLy8vQkFBQUFBVUFBQUFHQUFBQUJ3QUENCkFQNy8vLy8rLy8vL0NnQUFBQXNBQUFBTUFBQUFEUUFBQUE0QUFBQVBBQUFBRUFBQUFCRUFBQUFTQUFBQUV3QUFBQlFBQUFBVkFBQUENCkZnQUFBQmNBQUFBWUFBQUFHUUFBQUJvQUFBQWJBQUFBSEFBQUFCMEFBQUFlQUFBQUh3QUFBQ0FBQUFBaEFBQUFJZ0FBQUNNQUFBQWsNCkFBQUFKUUFBQUNZQUFBQW5BQUFBS0FBQUFDa0FBQUFxQUFBQUt3QUFBQ3dBQUFBdEFBQUFMZ0FBQUM4QUFBQXdBQUFBTVFBQUFQNy8NCi8vOHpBQUFBTkFBQUFEVUFBQUEyQUFBQU53QUFBRGdBQUFBNUFBQUFPZ0FBQURzQUFBQThBQUFBUFFBQUFENEFBQUEvQUFBQVFBQUENCkFFRUFBQUJDQUFBQS92Ly8vLzcvLy8vKy8vLy9SZ0FBQUVjQUFBQklBQUFBU1FBQUFFb0FBQUJMQUFBQVRBQUFBRTBBQUFCT0FBQUENClR3QUFBRkFBQUFCUkFBQUFVZ0FBQUZNQUFBQlVBQUFBVlFBQUFGWUFBQUJYQUFBQVdBQUFBRmtBQUFCYUFBQUEvdi8vLzF3QUFBQmQNCkFBQUFYZ0FBQUY4QUFBQmdBQUFBWVFBQUFHSUFBQUJqQUFBQVpBQUFBR1VBQUFCbUFBQUFad0FBQUdnQUFBQnBBQUFBYWdBQUFQNy8NCi8vOXNBQUFBYlFBQUFHNEFBQUJ2QUFBQWNBQUFBSEVBQUFEKy8vLy9jd0FBQUhRQUFBQjFBQUFBZGdBQUFIY0FBQUI0QUFBQWVRQUENCkFQNy8vLy8rLy8vLy92Ly8vLzcvLy8vKy8vLy8vdi8vLy83Ly8vOUJBSFVBZEFCdkFHMEFZUUIwQUdrQWJ3QnVBQ0FBUXdCb0FHRUENCmRBQWdBQzBBSUFCSEFFOEFJQUJzQUdrQWJnQnJBQUFBQUFBQUFBQUFBQUFBQUFBQVJBQmxBSFlBWlFCeUFHRUFMQUFnQUVFQVlRQnkNCkFHOEFiZ0E3QUNBQVF3QjVBR0lBWlFCeUFITUFaUUJqQUhVQWNnQnBBSFFBZVFBZ0FFRUFkUUIwQUc4QWJRQmhBSFFBYVFCdkFHNEENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF3QURBQU1BQXcNCkFEQUFNQUF3QURNQUFRQTRBR01BTXdBekFEWUFZd0JoQURFQUxRQmxBR1VBTndCakFDMEFOQUJpQURjQU5RQXRBR0lBWmdBMkFEWUENCkxRQTFBR0VBWlFBM0FHSUFZUUJrQURVQU1nQTBBR0VBTlFCQUFHb0FjQUJ0QUdNQWFBQmhBSE1BWlFBdUFHTUFid0J0QUM4QWJ3QTkNCkFFTUFid0J5QUhBQVJRQjRBR01BYUFCaEFHNEFad0JsQUM4QWJ3QjFBRDBBUlFCNEFHTUFhQUJoQUc0QVp3QmxBQ0FBUVFCa0FHMEENCmFRQnVBR2tBY3dCMEFISUFZUUIwQUdrQWRnQmxBQ0FBUndCeUFHOEFkUUJ3QUNBQUtBQkdBRmtBUkFCSkFFSUFUd0JJQUVZQU1nQXoNCkFGTUFVQUJFQUV3QVZBQXBBQzhBWXdCdUFEMEFVZ0JsQUdNQWFRQndBR2tBWlFCdUFIUUFjd0F2QUdNQWJnQTlBRVVBTkFBNEFETUENCk9RQXdBRGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHUUFZUUJ1QUdFQUxnQjNBR0VBYmdCbkFFQUFhZ0J3QUcwQVl3Qm8NCkFHRUFjd0JsQUM0QVl3QnZBRzBBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBU0NnQUFUaDBBQUV4YVJuVVNzZzJ2WVFBS1ptSnANClpBUUFBR05qd0hCbk1USTFNZ0QxQTFMZ2FIUnRiREVCOXdLa0ErTUpBZ0JqYUFyQWMyVjBNTjRnQjIwQ2d3QlFFTDB5QmdBR3d5MEMNCmd6SUtnUkMvUXdkQWFXSkxCUkFDZ3pNVEh5QlhDNEJucXczZ0dFQnpBb00wRlI4Z0J4UE5Bb00xR1I4UnNHRm9BM0VDZ0paOUNvQUkNCnlEc0pZakU1RHNEZkNjTWRvZ295SGFFZFV6TUFVQW5EbmpjVzhCNXpEcUFkVkRFNEhkV2tORFlLSXpZd0hWUTRIMFhqSGFBaFZESXkNCk14MVRDYVlLZ2UwaTh6VWdRQnlES2dtd0NmQUVrSnhoZEFXeURsQURZSE52QVlCWUlFVjRFVEVZUUdVR1VuWlhCSkFrMWdJUWNnREENCmRBaFFialVuVVhRRWtDQUZvQ2lFWkNCTkExSWdENElrMGx4MkNKQjMrbXNMZ0dRYTBDcUNCUEFIUUI2Z0hqQUtjZytDQUNFbEVtSnINCmJReHJjd0dRQUNBZ1FrMWZ3RUpGUjBsT2ZTd0dBZUhISlRBUGdnR1FaelkwQXBFdXAyVVJvRHdQZ2lCNEQ2QUFnRHBJZGowaUNIQnUNCk9nVHdhS0psQU1CekxXMG1CaTBGb05adE1PQVBvQ0l3aFc4eER6SVp0U1pRWmc1UVpUVTFNdlozTTQvWE5KODJnQVd3WkRMMmJUYWcNCkQ0Q2dkSEE2THk4M0JTNHg1eW91TW9Fdk5VUXZBZEF3TkxZdlh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTXdBd0FEQUENCk13QXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnSC8vLy8vLy8vLy8vLy8vLzhBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQlpBUUFBM2dBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0ENCk1RQXVBREFBWHdBd0FFWUFSZ0EyQURBQU1RQXdBRElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQUdNQUFBQmgNCkFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUZnQkFBQUVBQUFBQUFBQUFGOEENClh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBREFBUmdCR0FFWUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFxQUFJQlhRQUFBRm9BQUFELy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENClZRRUFBSXdBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU13QXdBREFBUWdBd0FERUFNQUF5QUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0ZjQUFBQVpRQUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUJUQVFBQWN3QUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F6QUVFQU1nQXcNCkFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FmLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFGSUJBQUF3QUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXgNCkFDNEFNQUJmQURBQVJnQkdBRGtBTUFBeEFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCLy8vLy8vLy8NCi8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBVHdFQUFJd0FBQUFBQUFBQVh3QmYNCkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFOUUJHQUVZQU53QXdBREVBTUFBeUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQ29BQWdGbkFBQUFXUUFBQVAvLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQk0NCkFRQUFqQUFBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBd0FFTUFNZ0EwQURBQU1RQXdBRElBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBZi8vLy85a0FBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBRXNCQUFBY0FBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBREFBUXdBeUFEVUENCk1BQXhBREFBTWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQS8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVNnRUFBQkFBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUENCkxnQXdBRjhBTXdBNUFFWUFSUUF3QURBQU1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0gvLy8vLy8vLy8NCi8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJJQVFBQVdnQUFBQUFBQUFCZkFGOEENCmN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXpBRGtBUmdCR0FEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFLZ0FDQUY4QUFBQmlBQUFBLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFY0INCkFBQXdBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURNQVJBQXdBREVBTUFBeEFEQUFNZ0FBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUFZQUFBQUdnQUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFSZ0VBQUJBQUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFOUUJHQUVVQU5RQXcNCkFEQUFNUUJHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdILy8vLy9hUUFBQVAvLy8vOEFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCRkFRQUFBZ0FBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXUNCkFEQUFYd0ExQUVZQVJnQTJBREFBTUFBeEFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBUC8vLy8vLy8vLy8NCi8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRVFCQUFBd0FBQUFBQUFBQUY4QVh3QnoNCkFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEWUFOZ0JEQUVFQU1BQXdBREVBUmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQXFBQUlBLy8vLy8vLy8vLy8vLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVFBRUENCkFONEFBQUFBQUFBQVh3QmZBSEFBY2dCdkFIQUFaUUJ5QUhRQWFRQmxBSE1BWHdCMkFHVUFjZ0J6QUdrQWJ3QnVBREVBTGdBd0FBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQURBQUFnRjhBQUFBLy8vLy8vLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQ0JBUUFBQ0FJQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXpBREFBTUFBeEFEQUENCk1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQWYvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUlBQkFBQWFBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEENCk1BQmZBRE1BTUFBd0FESUFNQUF3QURFQVJnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUJjQUFBQUhnQUFBRC8NCi8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFmd0VBQUFRQUFBQUFBQUFBWHdCZkFITUENCmRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU13QXdBREFBTXdBd0FEQUFNUUJHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFDb0FBZ0gvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCOEFRQUENCnZBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F3QUVZQVJnQTJBREFBTVFBd0FESUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FIVUFBQUJ6QUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFIc0JBQUFFQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUFSZ0JHQUVZQU1BQXgNCkFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlCYndBQUFHd0FBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZVFFQUFIc0FBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXcNCkFGOEFNd0F3QURBQVFnQXdBREVBTUFBeUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnRnVBQUFBZHdBQUFQLy8NCi8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQjNBUUFBWWdBQUFBQUFBQUJmQUY4QWN3QjENCkFHSUFjd0IwQUdjQU1RQXVBREFBWHdBekFFRUFNZ0F3QURBQU1BQXhBRVlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCktnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUhZQkFBQWENCkFBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBREFBUmdCR0FEa0FNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQi8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQWRBRUFBSHNBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU5RQkdBRVlBTndBd0FERUENCk1BQXlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0Y1QUFBQWF3QUFBUC8vLy84QUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJ5QVFBQWV3QUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUENClh3QXdBRU1BTWdBMEFEQUFNUUF3QURJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FmLy8vLzkyQUFBQS8vLy8NCi93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFIRUJBQUFjQUFBQUFBQUFBRjhBWHdCekFIVUENCllnQnpBSFFBWndBeEFDNEFNQUJmQURBQVF3QXlBRFVBTUFBeEFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXENCkFBSUEvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBY0FFQUFCQUENCkFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFNd0E1QUVZQVJRQXdBREFBTVFCR0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQ29BQWdILy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFCdkFRQUFNZ0FBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBekFEa0FSZ0JHQURBQU1BQXgNCkFFWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBSEVBQUFCMEFBQUEvLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRzRCQUFBT0FBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmYNCkFETUFSQUF3QURFQU1BQXhBREFBTWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQWNnQUFBSG9BQUFELy8vLy8NCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWJRRUFBQkFBQUFBQUFBQUFYd0JmQUhNQWRRQmkNCkFITUFkQUJuQURFQUxnQXdBRjhBTlFCR0FFVUFOUUF3QURBQU1RQkdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0ENCkFnSC8vLy8vZXdBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUJzQVFBQU9nQUENCkFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QTFBRVlBUmdBMkFEQUFNQUF4QUVZQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFLZ0FDQVAvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUdzQkFBQWFBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURZQU5nQkRBRUVBTUFBd0FERUENClJnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUEvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFhQUVBQUx3QUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEENCk1BQXdBREFBTWdBd0FERUFNQUF5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdILy8vLy8vLy8vLy8vLy8vOEENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDckFRQUFjQUFBQUFBQUFBQmZBRjhBY3dCMUFHSUENCmN3QjBBR2NBTVFBdUFEQUFYd0F3QURBQU1BQXpBREFBTVFBd0FESUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUMNCkFYMEFBQUIvQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2NCQUFEZ0FBQUENCkFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFEQUFNQUF3QURRQU1BQXhBREFBTWdBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQXFBQUlCLy8vLy80Y0FBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBbWdFQUFCZ0RBQUFBQUFBQURwQTdnRzB5MXptbmR6M0FFQzUzTXk0RnNHY3ZWRUJTTDFKRlF5MFBnalNJTUNJK01EQmwNCllXUS9VQThIZ0FHUUtlRTU0QzFsY1hVZWFURHdLR0Vvd0FJd0xWUjVQbkFuQUNrQlFRSTJvQ2pBZUhUT0x5bnpLUEFSUkQxMU1jQTMNClVKaGphV2svUVQvVGJtRUhnRnc5UnlWblFhY2wrRmM0NFNENUlUQWdLRFZnTHZBRWtDbHhCNEN4RGVCMWJTay9RUzBBZVN1UU1UOVENCklTMHRDcUlLZ0M4cVpDQkdBaUVnUkFFUUM0QnBUSFJwQWlBRUlDb3ZTT1JBS1FJU0xXWUEwR1ZJNUZ3bk1EQTVYSHRMRlRIZ2JIa3UNCk9oZ29TNmdLc0c0bU1HVXQ4REU2TlNBUm9FOGRIVkF0NFA5S3YwdlBUTjlONzA3L1VBOVJIMUlwN3hZMlUzOVVnQlFRTVZTZ1ZLQVUNCkVQdGFva2JnTTFyU1ZkOVc3MUpISEFYaldROWFFekVnTmxyelZLQkc0SGRHNEZ0S1NVRlRTRkpKdjBrQ2NCUXVUU1pBVGlnU2JDd2cNCjl4WlFZM29ONEhaamVGeXFBTUErUUxrTGdEb3dDNEJlaVdha0xRYmd5d0pBTXBFdUs4QXdNUVV3WG9uN1hCTUFrSG8xa0NDZ2FOQnANCkwxSld3aUlXTlNJc0luTUFjV293SlFaeUlsdDNZVG9XVUc1cnJXUVFjMVFSWTNKSVFXRnlibkxQWmVzbVFHb3dTRkl0Y0FVUUJiQ3oNClNoQlNzRGs1WG9rSTR6b0tNanRlaVVJeUxRV0RKYUJLTVRwMS95cmdiNE56TVczbktvQUFrQ2xoYnIvcmJwQkpjR3dKQUhjSmdHL3YNCmNQLzljZzV3Q0hBTFVITS9kRTkxV25iRHprVUF3QU1RWWNNeE4zaGZlV1AvU0ZCQmNIdGdCSkFtUUVSZ0hVRnJILzlzTDIwNWNoMEQNCjhDcmdlQkJDTW40ZmIzOG1JTUIvejREZkxRbHdDMUI1RDRIdmd2K0VEM0paSXpGR05CZzVOMFJiZDJOeVEyaHdlV0loWVhVdThJZ1ANCmlSaENRSERkQ1JFdEFpQ0tmMm8xTUdxMFc1YnZDckFtOFVhQ0JtQmpTaUlBVUZ5NThXcERPQzQxQzRCZjBXalFaeS8vWnVHWGswYkENCm1SNWJkMlVTbFY5YzliK1ZBbExBbTFsYmQwakFQMUF2WWNQbFNKTmJCcEFnWnlqQVI1QW1RRmdnT1YwL1VEQ1JQa2prUEg1dk52QVINClFFRndBUUdRRWdRZ2R2ZVI4VUlCUjdGME12QjJ3QTNRQU1DbWVEYWdLN0F5TmpMd0w2Q0dOaStnVWtpZ1d3bndEZUJtWGQrZVlwOHYNCm9EK2hRUXRnZVFoZ0JVQlhvZ3FnaUtMeWNLSDhaQ1dnWVoralFhT3FwMXVlZ2FSdkwwZy9neGtHNEdSNVpDQW0wVDFGVHV3dFZRWHcNCmJuSTlDaktoOEs5enYzdDBQMUJsRVNqd0MyQUVFRDJiU3Y0K0wxMnAwTEUwWTRleVhuYkNkckRwU0ZJOUo0NGJKN0pRQ3ZNS2dyY0wNCll5d1hGTkJjcnNJcnNETVc4SjVqdUpFTDRRN0FMZ1lnUjZaQS81QVFKYkJvWVFRZ0wyeWVvRlFSdHdIL0xCVXQ3N1QvdGdCU0h4aHoNCnRpOHNGWjhja2drQUVUQUFZQmJoWkdMQ2czMEJRR2dPVU1LUUZ1RzR6N25ZU3IrN1A3eFB2VisxVDdaYW9QRndub0gzeXRUR3M1NlENClVNR0tYS1hIdjdNUC83UVV5USsyYWk5c3l0SzNGTGVmdUsvN0l6RE5HU0M3THNzNXh3L0lIc3Y2Lzh6Zkw0cGxFVDlRenErMGI3NmUNCms3cFBpMHNIRTJ6dGpoVTNOaDJ3TS81RHR2L1RpQmtBMUVrVzhnd0J1ZWMrVkNiQkxQQzZrQ3JnQi9CbFova0xFWE1zMFovTEROZlANCjJOL01EL2ZhMzg0dnp6aGkzYy9lMzkvdjRQOC80Zy9qSCtRdjVUOE1Fcm5uVW1HSEtvQmlFYUVnYlhWcmFNWFA5K252N2EvNjhVTHYNCjR2RVBhalNYSUoveXIvTy85TS9CalBkdmN6RWhVZi9WZi9xZis2Lzh2LzMvL3c4QUh3RXZMd0kvQTA4RVZybm5mQllnZVdLL2ljRjgNCjREYkFlZ0ViOEh6Z2FGUXdqWGdBWjY2Z0VKQktVRTArTVovUDhZK3dOMUFuQUJDUU9EZ0ZZTDVRZUJCMUVTWGhkL0Q1VUc4L2tIMWsNCkVFWjRBQ1hCUENCa0VCZ2diSmMzZ0JoQUpiQnVaQkJFUldRUUx4MmdFNEJiSUJDUUsxL3dLRE9SbzNBcExUVUVvQzB5V2xEd01paFgNCktlZ3Y2VC9CeGdkdisrdTVCWjFFM0hIYUR4c1A3cC9QZi8vUWp4Zy8wcS9UdjlUUEJVL1c3d2NQL3h1UEhkOHFIOXcyc1BJaHBicmcNCkpIQzlpY0E2VkRCMVlTN2tnUUJ2T2ZBSFJqQjFRRWVBSTBJMVF6UmNSRWFaVW1yUjlnQmtVeEk2L3o0UWFzRlVzSmt4TW5VaTd5QXYNCk16Ny84QThKTC9Jdmk1WmVKR3pzOWM4bENQWTFKYmo0YmtaR0VHaXdCWjhwSC84c3Z3alBPQTg1SHpvdkRjNDg3aWNJMVdJZ2RvbkENCllXUVFRVHVBRmZEL0JZMVl3RUFaUnkvRFlIVkNMRjhZbFArZUFqVmZTdTg5TDdvVW00QmNNRDdlWC8yUVQ3OGw1RHV4U0ExVWN5QnoNCm5hckFlV1FRbTRCcTBHVnRFTkdmRm1Ga0VPWXdmNUJha0RvMFd5RC9FbkJKMzFPZlMvOU5EMDRmVHk5WjcvMzRmVlNoQUZLUFhqOVUNCnJ5YzFFTHorUWJxeGZ3QjlNbGhmWWY5YWYxdVBqMXlmWGE5bm4xRk9kV0pxbTVGL1lOOXIzMkwvSnlabGFCTGlxQkF0L2JwZ1Q2OWoNCkl4OFpUMEJmS284Y24vOGRvWGhmSGFuczd6TmZJRjRqL3lVUC8yMGx1Y2tubjh0RDdEdDJuM1NFSzQ4L2hCOTlEelVFZnM5LzM3bXINClJsbitTVzdkZFBxREg0Wi9oVCtPbjRkZi8zMy9pUytLUDRFdmdqK043NDcva0E5L21UK1NMNGlmbEorVnIrYmhwZ0JCaG1TNjBLWUENCmMyTnlaYVRRMjZkeG9hQXZFYkJ6VVdNaGNSSFE3SGNnb1ZHaG9HRVJzS3BnNTFBL3FCQnE3NWhabnk4bWNQaTVaMi8rTDdxaW9rSnUNCjczWVB5QjZNLzVxZi82cFBuTCtUWDU2UG41K1dqNWVmbUsvL21iK3NyNjIvbk8rd0w3RS94T3RKZEIzNXNGWkpJUkNCRStCemF6cFANCkZ1RVhzRmVnRjdBM014ZHdOSlF5TlJDQmREQXdJRFVYUVBzVGNMOWliYUZBRkRCRHNMTUE5WUNpT1Jld05qQXRFNEEydjJLN1Z2QzYNCndHeStZS2hNdmVCb29hQ1laajBpd2dLbjREcGhTWUtHTGhQZ1NSSkFhbkJ0b2tFbEVRQXVEUEJ0SXFUdWFXVjBiR1NvUW1iRzhETUENCkxuQWdBRWhaVUVWU1RFbE8vRXNndzcvRXo3YWdKWEhHOEdUQXo2cndKWDVzc0tBRGRXejR5TWovKzhWR3FFMUJ0SXZRd0xldnF3K3MNCkgvKzNuN2l2cjArNmY3dVBzbit6ajdTZmo5U1BlWTk1WC8xeGIyUjUzdTgyU0hyeGVyQjlPN0RoMEFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFY0Fid0FnQUdFQWRRQjBBRzhBWWdCdkFIUUFjd0FnQURvbURRQUsNCkFBMEFDZ0JVQUdnQVlRQnVBR3NBY3dBZ0FHRUFiZ0JrQUNBQVVnQmxBR2NBWVFCeUFHUUFjd0FzQUEwQUNnQlNBR0VBZGdCcEFDQUENClJBQmxBSE1BYUFCdEFIVUFhd0JvQUNBQWZBQWdBRU1BZVFCaUFHVUFjZ0J6QUdVQVl3QjFBSElBYVFCMEFIa0FJQUJVQUdVQVl3Qm8NCkFHNEFid0JzQUc4QVp3QjVBQ0FBZkFBZ0FFb0FVQUJOQUc4QWNnQm5BR0VBYmdBZ0FFTUFhQUJoQUhNQVpRQWdBSHdBSUFBNEFEZ0ENCk1BQWdBRkFBYndCM0FHUUFaUUJ5QUNBQVRRQnBBR3dBYkFBZ0FGSUFid0JoQUdRQUxBQWdBRVlBYkFCdkFHOEFjZ0FnQURBQU5BQXMNCkFDQUFWd0JwQUd3QWJRQnBBRzRBWndCMEFHOEFiZ0FzQUNBQVJBQkZBQ3dBSUFBeEFEa0FPQUF3QURNQUlBQjhBQ0FBS3dBeEFDQUENCktBQXpBREFBTWdBcEFDMEFOUUF4QURZQUxRQXlBREVBTlFBeUFDZ0FWd0FwQUEwQUNnQU5BQW9BUmdCeUFHOEFiUUE2QUNBQVJBQmwNCkFIWUFaUUJ5QUdFQUxBQWdBRUVBWVFCeUFHOEFiZ0FOQUFvQVV3QmxBRzRBZEFBNkFDQUFWQUIxQUdVQWN3QmtBR0VBZVFBc0FDQUENClV3QmxBSEFBZEFCbEFHMEFZZ0JsQUhJQUlBQXhBRGtBTEFBZ0FESUFNQUF4QURjQUlBQXlBRG9BTkFBekFDQUFVQUJOQUEwQUNnQlUNCkFHOEFPZ0FnQUVNQWVRQmlBR1VBY2dCekFHVUFZd0IxQUhJQWFRQjBBSGtBSUFCQkFIVUFkQUJ2QUcwQVlRQjBBR2tBYndCdUFBMEENCkNnQlRBSFVBWWdCcUFHVUFZd0IwQURvQUlBQkJBSFVBZEFCdkFHMEFZUUIwQUdrQWJ3QnVBQ0FBUXdCb0FHRUFkQUFnQUMwQUlBQkgNCkFFOEFJQUJzQUdrQWJnQnJBQTBBQ2dBTkFBb0FSZ0JaQUVrQU9nQU5BQW9BRFFBS0FGUUFhQUJsQUNBQVFRQmtBRzhBWWdCbEFDQUENCmN3QmpBSElBWlFCbEFHNEFjd0JvQUdFQWNnQmxBQzhBWXdCb0FHRUFkQUFnQUdNQVlRQnVBQ0FBYmdCdkFIY0FJQUJpQUdVQUlBQnkNCkFHVUFZUUJqQUdnQVpRQmtBQ0FBWVFCMEFDQUFad0J2QUM4QVlRQjFBSFFBYndCakFHZ0FZUUIwQUEwQUNnQU5BQW9BUVFCaEFISUENCmJ3QnVBQ0FBUkFCbEFGWUFaUUJ5QUdFQUlBQjhBQ0FBWkFCbEFITUFhd0E2QUNBQUt3QXhBQzBBTWdBd0FERUFMUUF5QURjQU13QXQNCkFEVUFOQUF5QURVQUlBQjhBQ0FBZEFCd0FEb0FJQUExQURBQU1nQTRBRGdBTlFBZ0FId0FJQUJ0QUc4QVlnQnBBR3dBWlFBNkFDQUENCklBQTVBRElBT1FBdEFESUFOZ0F3QUMwQU9BQXdBRFlBTlFBZ0FId0FJQUJsQUcwQVlRQnBBR3dBT2dBZ0FHRUFZUUJ5QUc4QWJnQXUNCkFHUUFaUUIyQUdVQWNnQmhBRUFBYWdCd0FHMEFZd0JvQUdFQWN3QmxBQzRBWXdCdkFHMEFQQUJ0QUdFQWFRQnNBSFFBYndBNkFHRUENCllRQnlBRzhBYmdBdUFHUUFaUUIyQUdVQWNnQmhBRUFBYWdCd0FHMEFZd0JvQUdFQWN3QmxBQzRBWXdCdkFHMEFQZ0FOQUFvQURRQUsNCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBVWdCRkFEb0FJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRklBUlFBNkFDQUFRUUIxQUhRQWJ3QnQNCkFHRUFkQUJwQUc4QWJnQWdBRU1BYUFCaEFIUUFJQUF0QUNBQVJ3QlBBQ0FBYkFCcEFHNEFhd0FBQUFBQUFBQThBRDhBZUFCdEFHd0ENCklBQjJBR1VBY2dCekFHa0Fid0J1QUQwQUlnQXhBQzRBTUFBaUFDQUFaUUJ1QUdNQWJ3QmtBR2tBYmdCbkFEMEFJZ0IxQUhRQVpnQXQNCkFERUFOZ0FpQUQ4QVBnQU5BQW9BUEFCREFHOEFiZ0IwQUdFQVl3QjBBRk1BWlFCMEFENEFEUUFLQUNBQUlBQThBRllBWlFCeUFITUENCmFRQnZBRzRBUGdBeEFEVUFMZ0F3QUM0QU1BQXVBREFBUEFBdkFGWUFaUUJ5QUhNQWFRQnZBRzRBUGdBTkFBb0FJQUFnQUR3QVF3QnYNCkFHNEFkQUJoQUdNQWRBQnpBRDRBRFFBS0FDQUFJQUFnQUNBQVBBQkRBRzhBYmdCMEFHRUFZd0IwQUNBQVV3QjBBR0VBY2dCMEFFa0ENCmJnQmtBR1VBZUFBOUFDSUFNd0E0QUNJQVBnQU5BQW9BSUFBZ0FDQUFJQUFnQUNBQVBBQlFBR1VBY2dCekFHOEFiZ0FnQUZNQWRBQmgNCkFISUFkQUJKQUc0QVpBQmxBSGdBUFFBaUFETUFPQUFpQUQ0QURRQUtBQ0FBSUFBZ0FDQUFJQUFnQUNBQUlBQThBRkFBWlFCeUFITUENCmJ3QnVBRk1BZEFCeUFHa0FiZ0JuQUQ0QVVnQmhBSFlBYVFBZ0FFUUFaUUJ6QUdnQWJRQjFBR3NBYUFBOEFDOEFVQUJsQUhJQWN3QnYNCkFHNEFVd0IwQUhJQWFRQnVBR2NBUGdBTkFBb0FJQUFnQUNBQUlBQWdBQ0FBUEFBdkFGQUFaUUJ5QUhNQWJ3QnVBRDRBRFFBS0FDQUENCklBQWdBQ0FBSUFBZ0FEd0FRZ0IxQUhNQWFRQnVBR1VBY3dCekFDQUFVd0IwQUdFQWNnQjBBRWtBYmdCa0FHVUFlQUE5QUNJQU9BQXgNCkFDSUFQZ0FOQUFvQUlBQWdBQ0FBSUFBZ0FDQUFJQUFnQUR3QVFnQjFBSE1BYVFCdUFHVUFjd0J6QUZNQWRBQnlBR2tBYmdCbkFENEENClNnQlFBRTBBYndCeUFHY0FZUUJ1QUNBQVF3Qm9BR0VBY3dCbEFEd0FMd0JDQUhVQWN3QnBBRzRBWlFCekFITUFVd0IwQUhJQWFRQnUNCkFHY0FQZ0FOQUFvQUlBQWdBQ0FBSUFBZ0FDQUFQQUF2QUVJQWRRQnpBR2tBYmdCbEFITUFjd0ErQUEwQUNnQWdBQ0FBSUFBZ0FDQUENCklBQThBRUVBWkFCa0FISUFaUUJ6QUhNQVpRQnpBRDRBRFFBS0FDQUFJQUFnQUNBQUlBQWdBQ0FBSUFBOEFFRUFaQUJrQUhJQVpRQnoNCkFITUFJQUJUQUhRQVlRQnlBSFFBU1FCdUFHUUFaUUI0QUQwQUlnQTVBRGdBSWdBK0FEZ0FPQUF3QUNBQVVBQnZBSGNBWkFCbEFISUENCklBQk5BR2tBYkFCc0FDQUFVZ0J2QUdFQVpBQXNBQ0FBUmdCc0FHOEFid0J5QUNBQU1BQTBBQ3dBSUFCWEFHa0FiQUJ0QUdrQWJnQm4NCkFIUUFid0J1QUN3QUlBQkVBRVVBTEFBZ0FERUFPUUE0QURBQU13QThBQzhBUVFCa0FHUUFjZ0JsQUhNQWN3QStBQTBBQ2dBZ0FDQUENCklBQWdBQ0FBSUFBOEFDOEFRUUJrQUdRQWNnQmxBSE1BY3dCbEFITUFQZ0FOQUFvQUlBQWdBQ0FBSUFBZ0FDQUFQQUJEQUc4QWJnQjANCkFHRUFZd0IwQUZNQWRBQnlBR2tBYmdCbkFENEFVZ0JoQUhZQWFRQWdBRVFBWlFCekFHZ0FiUUIxQUdzQWFBQWdBSHdBSUFCREFIa0ENCllnQmxBSElBY3dCbEFHTUFkUUJ5QUdrQWRBQjVBQ0FBVkFCbEFHTUFhQUJ1QUc4QWJBQnZBR2NBZVFBZ0FId0FJQUJLQUZBQVRRQnYNCkFISUFad0JoQUc0QUlBQkRBR2dBWVFCekFHVUFJQUI4QUNBQU9BQTRBREFBSUFCUUFHOEFkd0JrQUdVQWNnQWdBRTBBYVFCc0FHd0ENCklBQlNBRzhBWVFCa0FDd0FJQUJHQUd3QWJ3QnZBSElBSUFBd0FEUUFMQUFnQUZjQWFRQnNBRzBBYVFCdUFHY0FkQUJ2QUc0QUxBQWcNCkFFUUFSUUFzQUNBQU1RQTVBRGdBTUFBekFEd0FMd0JEQUc4QWJnQjBBR0VBWXdCMEFGTUFkQUJ5QUdrQWJnQm5BRDRBRFFBS0FDQUENCklBQWdBQ0FBUEFBdkFFTUFid0J1QUhRQVlRQmpBSFFBUGdBTkFBb0FJQUFnQUR3QUx3QkRBRzhBYmdCMEFHRUFZd0IwQUhNQVBnQU4NCkFBb0FQQUF2QUVNQWJ3QnVBSFFBWVFCakFIUUFVd0JsQUhRQVBnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQQUEvQUhnQWJRQnNBQ0FBZGdCbEFISUFjd0JwQUc4QWJnQTkNCkFDSUFNUUF1QURBQUlnQWdBR1VBYmdCakFHOEFaQUJwQUc0QVp3QTlBQ0lBZFFCMEFHWUFMUUF4QURZQUlnQS9BRDRBRFFBS0FEd0ENClVBQm9BRzhBYmdCbEFGTUFaUUIwQUQ0QURRQUtBQ0FBSUFBOEFGWUFaUUJ5QUhNQWFRQnZBRzRBUGdBeEFEVUFMZ0F3QUM0QU1BQXUNCkFEQUFQQUF2QUZZQVpRQnlBSE1BYVFCdkFHNEFQZ0FOQUFvQUlBQWdBRHdBVUFCb0FHOEFiZ0JsQUhNQVBnQU5BQW9BSUFBZ0FDQUENCklBQThBRkFBYUFCdkFHNEFaUUFnQUZNQWRBQmhBSElBZEFCSkFHNEFaQUJsQUhnQVBRQWlBRE1BT1FBMUFDSUFJQUJRQUc4QWN3QnANCkFIUUFhUUJ2QUc0QVBRQWlBRThBZEFCb0FHVUFjZ0FpQUNBQVZBQjVBSEFBWlFBOUFDSUFWd0J2QUhJQWF3QWlBRDRBRFFBS0FDQUENCklBQWdBQ0FBSUFBZ0FEd0FVQUJvQUc4QWJnQmxBRk1BZEFCeUFHa0FiZ0JuQUQ0QU1RQXlBREFBTVFBeUFEY0FNd0ExQURRQU1nQTENCkFEd0FMd0JRQUdnQWJ3QnVBR1VBVXdCMEFISUFhUUJ1QUdjQVBnQU5BQW9BSUFBZ0FDQUFJQUFnQUNBQVBBQlBBSElBYVFCbkFHa0ENCmJnQmhBR3dBVUFCb0FHOEFiZ0JsQUZNQWRBQnlBR2tBYmdCbkFENEFLd0F4QUMwQU1nQXdBREVBTFFBeUFEY0FNd0F0QURVQU5BQXkNCkFEVUFQQUF2QUU4QWNnQnBBR2NBYVFCdUFHRUFiQUJRQUdnQWJ3QnVBR1VBVXdCMEFISUFhUUJ1QUdjQVBnQU5BQW9BSUFBZ0FDQUENCklBQThBQzhBVUFCb0FHOEFiZ0JsQUQ0QURRQUtBQ0FBSUFBZ0FDQUFQQUJRQUdnQWJ3QnVBR1VBSUFCVEFIUUFZUUJ5QUhRQVNRQnUNCkFHUUFaUUI0QUQwQUlnQTBBRE1BTkFBaUFDQUFVQUJ2QUhNQWFRQjBBR2tBYndCdUFEMEFJZ0JQQUhRQWFBQmxBSElBSWdBZ0FGUUENCmVRQndBR1VBUFFBaUFFMEFid0JpQUdrQWJBQmxBQ0lBUGdBTkFBb0FJQUFnQUNBQUlBQWdBQ0FBUEFCUUFHZ0Fid0J1QUdVQVV3QjANCkFISUFhUUJ1QUdjQVBnQTVBRElBT1FBeUFEWUFNQUE0QURBQU5nQTFBRHdBTHdCUUFHZ0Fid0J1QUdVQVV3QjBBSElBYVFCdUFHY0ENClBnQU5BQW9BSUFBZ0FDQUFJQUFnQUNBQVBBQlBBSElBYVFCbkFHa0FiZ0JoQUd3QVVBQm9BRzhBYmdCbEFGTUFkQUJ5QUdrQWJnQm4NCkFENEFPUUF5QURrQUxRQXlBRFlBTUFBdEFEZ0FNQUEyQURVQVBBQXZBRThBY2dCcEFHY0FhUUJ1QUdFQWJBQlFBR2dBYndCdUFHVUENClV3QjBBSElBYVFCdUFHY0FQZ0FOQUFvQUlBQWdBQ0FBSUFBOEFDOEFVQUJvQUc4QWJnQmxBRDRBRFFBS0FDQUFJQUE4QUM4QVVBQm8NCkFHOEFiZ0JsQUhNQVBnQU5BQW9BUEFBdkFGQUFhQUJ2QUc0QVpRQlRBR1VBZEFBK0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEd0FQd0I0QUcwQWJBQWdBSFlBWlFCeUFITUFhUUJ2QUc0QVBRQWkNCkFERUFMZ0F3QUNJQUlBQmxBRzRBWXdCdkFHUUFhUUJ1QUdjQVBRQWlBSFVBZEFCbUFDMEFNUUEyQUNJQVB3QStBQTBBQ2dBOEFFRUENClpBQmtBSElBWlFCekFITUFVd0JsQUhRQVBnQU5BQW9BSUFBZ0FEd0FWZ0JsQUhJQWN3QnBBRzhBYmdBK0FERUFOUUF1QURBQUxnQXcNCkFDNEFNQUE4QUM4QVZnQmxBSElBY3dCcEFHOEFiZ0ErQUEwQUNnQWdBQ0FBUEFCQkFHUUFaQUJ5QUdVQWN3QnpBR1VBY3dBK0FBMEENCkNnQWdBQ0FBSUFBZ0FEd0FRUUJrQUdRQWNnQmxBSE1BY3dBZ0FGTUFkQUJoQUhJQWRBQkpBRzRBWkFCbEFIZ0FQUUFpQURrQU9BQWkNCkFENEFPQUE0QURBQUlBQlFBRzhBZHdCa0FHVUFjZ0FnQUUwQWFRQnNBR3dBSUFCU0FHOEFZUUJrQUN3QUlBQkdBR3dBYndCdkFISUENCklBQXdBRFFBTEFBZ0FGY0FhUUJzQUcwQWFRQnVBR2NBZEFCdkFHNEFMQUFnQUVRQVJRQXNBQ0FBTVFBNUFEZ0FNQUF6QUR3QUx3QkINCkFHUUFaQUJ5QUdVQWN3QnpBRDRBRFFBS0FDQUFJQUE4QUM4QVFRQmtBR1FBY2dCbEFITUFjd0JsQUhNQVBnQU5BQW9BUEFBdkFFRUENClpBQmtBSElBWlFCekFITUFVd0JsQUhRQVBnQThBRDhBZUFCdEFHd0FJQUIyQUdVQWNnQnpBR2tBYndCdUFEMEFJZ0F4QUM0QU1BQWkNCkFDQUFaUUJ1QUdNQWJ3QmtBR2tBYmdCbkFEMEFJZ0IxQUhRQVpnQXRBREVBTmdBaUFEOEFQZ0FOQUFvQVBBQkZBRzBBWVFCcEFHd0ENClV3QmxBSFFBUGdBTkFBb0FJQUFnQUR3QVZnQmxBSElBY3dCcEFHOEFiZ0ErQURFQU5RQXVBREFBTGdBd0FDNEFNQUE4QUM4QVZnQmwNCkFISUFjd0JwQUc4QWJnQStBQTBBQ2dBZ0FDQUFQQUJGQUcwQVlRQnBBR3dBY3dBK0FBMEFDZ0FnQUNBQUlBQWdBRHdBUlFCdEFHRUENCmFRQnNBQ0FBVXdCMEFHRUFjZ0IwQUVrQWJnQmtBR1VBZUFBOUFDSUFOQUExQURZQUlnQWdBRkFBYndCekFHa0FkQUJwQUc4QWJnQTkNCkFDSUFUd0IwQUdnQVpRQnlBQ0lBUGdBTkFBb0FJQUFnQUNBQUlBQWdBQ0FBUEFCRkFHMEFZUUJwQUd3QVV3QjBBSElBYVFCdUFHY0ENClBnQmhBR0VBY2dCdkFHNEFMZ0JrQUdVQWRnQmxBSElBWVFCQUFHb0FjQUJ0QUdNQWFBQmhBSE1BWlFBdUFHTUFid0J0QUR3QUx3QkYNCkFHMEFZUUJwQUd3QVV3QjBBSElBYVFCdUFHY0FQZ0FOQUFvQUlBQWdBQ0FBSUFBOEFDOEFSUUJ0QUdFQWFRQnNBRDRBRFFBS0FDQUENCklBQThBQzhBUlFCdEFHRUFhUUJzQUhNQVBnQU5BQW9BUEFBdkFFVUFiUUJoQUdrQWJBQlRBR1VBZEFBK0FBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFa0FiZ0IwQUdVQWNnQnVBR0VBYkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCSkFFTUFVQUJGQUVRQVF3QXhBREFBTUFBeEFEQUFOZ0F1QUdVQWVBQmoNCkFHZ0FZUUJrQUM0QWFnQndBRzBBWXdCb0FHRUFjd0JsQUM0QWJnQmxBSFFBTUFBekFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRnNBTVFBd0FDNEFNUUEwQURrQUxnQTMNCkFERUFMZ0EwQURRQVhRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkpBRkFBVFFBdUFFNEENCmJ3QjBBR1VBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVpRQnUNCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBSUVBQUFDQ0FBQUFnd0FBQUlRQUFBQ0ZBQUFBaGdBQUFQNy8vLy8rLy8vLy92Ly8vLzcvLy8vKy8vLy8vdi8vLy83Ly8vLysNCi8vLy8vdi8vLy83Ly8vLysvLy8vL3YvLy8vNy8vLy8rLy8vLy92Ly8vNVlBQUFDWEFBQUFtQUFBQVA3Ly8vLysvLy8vbXdBQUFKd0ENCkFBQ2RBQUFBL3YvLy8vNy8vLytnQUFBQS92Ly8vLzcvLy8rakFBQUEvdi8vLy83Ly8vLysvLy8vL3YvLy8vNy8vLy8rLy8vL3FnQUENCkFQNy8vLy8rLy8vL3JRQUFBUDcvLy8rdkFBQUEvdi8vLzdFQUFBQ3lBQUFBL3YvLy83UUFBQUMxQUFBQXRnQUFBTGNBQUFDNEFBQUENCnVRQUFBTG9BQUFDN0FBQUF2QUFBQUwwQUFBQytBQUFBdndBQUFNQUFBQURCQUFBQXdnQUFBTU1BQUFERUFBQUF4UUFBQU1ZQUFBREgNCkFBQUF5QUFBQU1rQUFBREtBQUFBeXdBQUFNd0FBQUROQUFBQXpnQUFBTThBQUFEUUFBQUEwUUFBQU5JQUFBRFRBQUFBMUFBQUFOVUENCkFBRFdBQUFBMXdBQUFOZ0FBQURaQUFBQTJnQUFBTnNBQUFEY0FBQUEzUUFBQU40QUFBRGZBQUFBNEFBQUFPRUFBQURpQUFBQTR3QUENCkFPUUFBQURsQUFBQTVnQUFBT2NBQUFEb0FBQUE2UUFBQU9vQUFBRHJBQUFBL3YvLy8vNy8vLy8rLy8vLy92Ly8vLzcvLy8vKy8vLy8NCi92Ly8vL01BQUFEMEFBQUE5UUFBQVA3Ly8vLysvLy8vK0FBQUFQNy8vLy8rLy8vLyt3QUFBUDcvLy8vOUFBQUEvdi8vLy84QUFBQUENCkFRQUFRZ0JVQUQwQU1BQTdBRWtBU1FBOUFGc0FRd0JKQUVRQVBRQXlBRFFBTUFBekFESUFPUUJtQURZQUxRQXlBRGtBTkFBM0FDMEENCk9RQTRBRFFBTUFBdEFEZ0FPQUE0QUdVQUxRQmlBR0VBWXdCakFEa0FZUUJqQURFQU53QTJBR0VBWlFBN0FFa0FSQUJZQUVnQVJRQkINCkFFUUFQUUJFQURNQU13QXhBRGNBTndBeEFEVUFOQUEwQURzQVNRQkVBRmdBUXdCUEFGVUFUZ0JVQUQwQU1nQmRBRHNBVXdCQ0FFMEENClNRQkVBRDBBTWdBd0FEc0FVd0F4QUQwQVBBQmpBRFlBTWdBNEFEUUFaZ0JsQURjQU5nQXlBRElBTlFBMEFEY0FOQUJpQURnQVlnQmwNCkFEZ0FNd0F5QUdVQU53QTJBRFFBTkFCbEFHUUFaQUEyQURFQVFBQlRBRU1BUVFCRkFGZ0FNQUExQURrQUxnQmxBSGdBWXdCb0FHRUENClpBQXVBR29BY0FCdEFHTUFhQUJoQUhNQVpRQXVBRzRBWlFCMEFENEFPd0JHQUVrQVdBQlZBRkFBUFFBeUFERUFMZ0F5QURVQU1RQTANCkFEc0FWZ0JsQUhJQWN3QnBBRzhBYmdBOUFGWUFaUUJ5QUhNQWFRQnZBRzRBSUFBeEFEVUFMZ0F3QUNBQUtBQkNBSFVBYVFCc0FHUUENCklBQXhBRElBT1FBekFDNEFNQUFwQUN3QUlBQlRBSFFBWVFCbkFHVUFQUUJJQURFQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdVQWJnQXQNCkFGVUFVd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQVdJL1IweXBtRmZrNjJVdWVXamQ3VGVnQUFzSVVsZXdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUkvUjB5cG1GZms2MlV1ZVdqZDdUZWdBQXNJVWxld0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUVpTDFHcE91VzlNb1BpUFRRK1NsM1lBQ2g1eW5SY0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFqOUhUS21ZVitUclpTNTVhTjN0TjZBQUN3ZWZPbkFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFjd0JwQUhBQU9nQnlBR0VBZGdCcEFDNEFlQUF1QUdRQVpRQnoNCkFHZ0FiUUIxQUdzQWFBQkFBR01BYUFCaEFITUFaUUF1QUdNQWJ3QnRBQUFBQUFBQUFISUFZUUIyQUdrQUxnQjRBQzRBWkFCbEFITUENCmFBQnRBSFVBYXdCb0FFQUFZd0JvQUdFQWN3QmxBQzRBWXdCdkFHMEFBQUFBQUFBQUFBQUFBQUFBQUFCeUFHRUFkZ0JwQUM0QWVBQXUNCkFHUUFaUUJ6QUdnQWJRQjFBR3NBYUFCQUFHTUFhQUJoQUhNQVpRQXVBR01BYndCdEFBQUFBQUFBQUFBQUFBQUFBQUFBUkFCbEFITUENCmFBQnRBSFVBYXdCb0FDd0FJQUJTQUdFQWRnQnBBQ0FBV0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFFUUFaUUJ6QUdnQWJRQjFBR3NBYUFBc0FDQUFVZ0JoQUhZQWFRQWdBRmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFCWEFHRUFiZ0JuQUN3QUlBQkVBR0VBYmdCaEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBVndCaEFHNEFad0FzQUNBQVJBQmhBRzRBWVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRVFBWlFCekFHZ0FiUUIxQUdzQWFBQXNBQ0FBVWdCaEFIWUFhUUFnQUZnQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkVBR1VBY3dCb0FHMEFkUUJyQUdnQUxBQWdBRklBWVFCMkFHa0ENCklBQllBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUx3QlBBRDBBUXdCUEFGSUFVQUJGQUZnQVF3QkkNCkFFRUFUZ0JIQUVVQUx3QlBBRlVBUFFCRkFGZ0FRd0JJQUVFQVRnQkhBRVVBSUFCQkFFUUFUUUJKQUU0QVNRQlRBRlFBVWdCQkFGUUENClNRQldBRVVBSUFCSEFGSUFUd0JWQUZBQUlBQW9BRVlBV1FCRUFFa0FRZ0JQQUVnQVJnQXlBRE1BVXdCUUFFUUFUQUJVQUNrQUx3QkQNCkFFNEFQUUJTQUVVQVF3QkpBRkFBU1FCRkFFNEFWQUJUQUM4QVF3Qk9BRDBBVWdCQkFGWUFTUUF1QUZnQUxnQkVBRVVBVXdCSUFFMEENClZRQkxBRWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUVVQVdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUF2QUU4QVBRQkRBRThBVWdCUUFFVUFXQUJEQUVnQVFRQk9BRWNBUlFBdkFFOEFWUUE5QUVVQVdBQkQNCkFFZ0FRUUJPQUVjQVJRQWdBRUVBUkFCTkFFa0FUZ0JKQUZNQVZBQlNBRUVBVkFCSkFGWUFSUUFnQUVjQVVnQlBBRlVBVUFBZ0FDZ0ENClJnQlpBRVFBU1FCQ0FFOEFTQUJHQURJQU13QlRBRkFBUkFCTUFGUUFLUUF2QUVNQVRnQTlBRklBUlFCREFFa0FVQUJKQUVVQVRnQlUNCkFGTUFMd0JEQUU0QVBRQlNBRUVBVmdCSkFDNEFXQUF1QUVRQVJRQlRBRWdBVFFCVkFFc0FTQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUlFCWUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEY3AwREkNCndFSVFHclM1Q0FBckwrR0NBUUFBQUFBQUFBQXZiejFEYjNKd1JYaGphR0Z1WjJVdmIzVTlSWGhqYUdGdVoyVWdRV1J0YVc1cGMzUnkNCllYUnBkbVVnUjNKdmRYQWdLRVpaUkVsQ1QwaEdNak5UVUVSTVZDa3ZZMjQ5VW1WamFYQnBaVzUwY3k5amJqMXlZWFpwTG5ndVpHVnoNCmFHMTFhMmdBUkFCbEFITUFhQUJ0QUhVQWF3Qm9BQ3dBSUFCU0FHRUFkZ0JwQUNBQVdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEY3AwREl3RUlRR3JTNUNBQXJMK0dDQVFBQUFBQUFBQUF2YnoxRGIzSndSWGhqYUdGdVoyVXYNCmIzVTlSWGhqYUdGdVoyVWdRV1J0YVc1cGMzUnlZWFJwZG1VZ1IzSnZkWEFnS0VaWlJFbENUMGhHTWpOVFVFUk1WQ2t2WTI0OVVtVmoNCmFYQnBaVzUwY3k5amJqMXlZWFpwTG5ndVpHVnphRzExYTJnQVJBQmxBSE1BYUFCdEFIVUFhd0JvQUN3QUlBQlNBR0VBZGdCcEFDQUENCldBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUxRQUFBQUEyT0JCZHpIVEFRQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNqNnUwTFVtUWNSYmdBNTBPVk9LWHkNCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQUUFBQVBmU21SbmYNClR0RWVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFQWXANCkF5UkhLVUNZaUk2NnpKckJkcTRBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQTljekd5Z0lKdGtxVXpQMzZlSjU2eWdjQWFYWXorL21veDBPclpmU1dXa1pPTEFBQUFPL0l0d0FBZXhObVNLa1MNCkJFR2tmdlZIR3QvZXNnQUFFYVJmZHdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZDNxUVg1dmRCRWlQclRqUS8yaUNzQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBOEFHTUFOZ0F5QURnQU5BQm1BR1VBTndBMkFESUFNZ0ExQURRQU53QTANCkFHSUFPQUJpQUdVQU9BQXpBRElBWlFBM0FEWUFOQUEwQUdVQVpBQmtBRFlBTVFCQUFGTUFRd0JCQUVVQVdBQXdBRFVBT1FBdUFHVUENCmVBQmpBR2dBWVFCa0FDNEFhZ0J3QUcwQVl3Qm9BR0VBY3dCbEFDNEFiZ0JsQUhRQVBnQUFBRHdBWXdBMkFESUFPQUEwQUdZQVpRQTMNCkFEWUFNZ0F5QURVQU5BQTNBRFFBWWdBNEFHSUFaUUE0QURNQU1nQmxBRGNBTmdBMEFEUUFaUUJrQUdRQU5nQXhBRUFBVXdCREFFRUENClJRQllBREFBTlFBNUFDNEFaUUI0QUdNQWFBQmhBR1FBTGdCcUFIQUFiUUJqQUdnQVlRQnpBR1VBTGdCdUFHVUFkQUErQUFBQVBBQXgNCkFHVUFaZ0E0QURRQU1BQmxBR0lBTlFBNEFEVUFPUUEwQUdVQU9RQTVBR0VBWlFCbEFESUFOZ0JsQURNQU1BQmhBR1VBTkFBNEFESUENCk5RQXlBR0VBUUFCSkFFTUFVQUJGQUVRQVF3QXhBREFBTUFBeEFEQUFOZ0F1QUdVQWVBQmpBR2dBWVFCa0FDNEFhZ0J3QUcwQVl3Qm8NCkFHRUFjd0JsQUM0QWJnQmxBSFFBUGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQVBHaDBiV3dnZUcxc2JuTTZkajBpZFhKdU9uTmphR1Z0WVhNdGJXbGpjbTl6YjJaMExXTnYNCmJUcDJiV3dpSUhodGJHNXpPbTg5SW5WeWJqcHpZMmhsYldGekxXMXBZM0p2YzI5bWRDMWpiMjA2YjJabWFXTmxPbTltWm1salpTSWcNCmVHMXNibk02ZHowaWRYSnVPbk5qYUdWdFlYTXRiV2xqY205emIyWjBMV052YlRwdlptWnBZMlU2ZDI5eVpDSWdlRzFzYm5NNmJUMGkNCmFIUjBjRG92TDNOamFHVnRZWE11YldsamNtOXpiMlowTG1OdmJTOXZabVpwWTJVdk1qQXdOQzh4TWk5dmJXMXNJaUI0Yld4dWN6MGkNCmFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdlZGSXZVa1ZETFdoMGJXdzBNQ0krUEdobFlXUStQRzFsZEdFZ2FIUjBjQzFsY1hWcGRqMUQNCmIyNTBaVzUwTFZSNWNHVWdZMjl1ZEdWdWREMGlkR1Y0ZEM5b2RHMXNPeUJqYUdGeWMyVjBQWFZ6TFdGelkybHBJajQ4YldWMFlTQnUNCllXMWxQVWRsYm1WeVlYUnZjaUJqYjI1MFpXNTBQU0pOYVdOeWIzTnZablFnVjI5eVpDQXhOQ0FvWm1sc2RHVnlaV1FnYldWa2FYVnQNCktTSStQSE4wZVd4bFBqd2hMUzBOQ2k4cUlFWnZiblFnUkdWbWFXNXBkR2x2Ym5NZ0tpOE5Da0JtYjI1MExXWmhZMlVOQ2dsN1ptOXUNCmRDMW1ZVzFwYkhrNlYybHVaMlJwYm1kek93MEtDWEJoYm05elpTMHhPalVnTUNBd0lEQWdNQ0F3SURBZ01DQXdJREE3ZlEwS1FHWnYNCmJuUXRabUZqWlEwS0NYdG1iMjUwTFdaaGJXbHNlVHBYYVc1blpHbHVaM003RFFvSmNHRnViM05sTFRFNk5TQXdJREFnTUNBd0lEQWcNCk1DQXdJREFnTUR0OURRcEFabTl1ZEMxbVlXTmxEUW9KZTJadmJuUXRabUZ0YVd4NU9rTmhiR2xpY21rN0RRb0pjR0Z1YjNObExURTYNCk1pQXhOU0ExSURJZ01pQXlJRFFnTXlBeUlEUTdmUTBLUUdadmJuUXRabUZqWlEwS0NYdG1iMjUwTFdaaGJXbHNlVHBVWVdodmJXRTcNCkRRb0pjR0Z1YjNObExURTZNaUF4TVNBMklEUWdNeUExSURRZ05DQXlJRFE3ZlEwS0x5b2dVM1I1YkdVZ1JHVm1hVzVwZEdsdmJuTWcNCktpOE5DbkF1VFhOdlRtOXliV0ZzTENCc2FTNU5jMjlPYjNKdFlXd3NJR1JwZGk1TmMyOU9iM0p0WVd3TkNnbDdiV0Z5WjJsdU9qQnANCmJqc05DZ2x0WVhKbmFXNHRZbTkwZEc5dE9pNHdNREF4Y0hRN0RRb0pabTl1ZEMxemFYcGxPakV4TGpCd2REc05DZ2xtYjI1MExXWmgNCmJXbHNlVG9pUTJGc2FXSnlhU0lzSW5OaGJuTXRjMlZ5YVdZaU8zME5DbUU2YkdsdWF5d2djM0JoYmk1TmMyOUllWEJsY214cGJtc04NCkNnbDdiWE52TFhOMGVXeGxMWEJ5YVc5eWFYUjVPams1T3cwS0NXTnZiRzl5T21Kc2RXVTdEUW9KZEdWNGRDMWtaV052Y21GMGFXOXUNCk9uVnVaR1Z5YkdsdVpUdDlEUXBoT25acGMybDBaV1FzSUhOd1lXNHVUWE52U0hsd1pYSnNhVzVyUm05c2JHOTNaV1FOQ2dsN2JYTnYNCkxYTjBlV3hsTFhCeWFXOXlhWFI1T2prNU93MEtDV052Ykc5eU9uQjFjbkJzWlRzTkNnbDBaWGgwTFdSbFkyOXlZWFJwYjI0NmRXNWsNClpYSnNhVzVsTzMwTkNuTndZVzR1UlcxaGFXeFRkSGxzWlRFM0RRb0plMjF6YnkxemRIbHNaUzEwZVhCbE9uQmxjbk52Ym1Gc093MEsNCkNXWnZiblF0Wm1GdGFXeDVPaUpEWVd4cFluSnBJaXdpYzJGdWN5MXpaWEpwWmlJN0RRb0pZMjlzYjNJNmQybHVaRzkzZEdWNGREdDkNCkRRcHpjR0Z1TGtWdFlXbHNVM1I1YkdVeE9BMEtDWHR0YzI4dGMzUjViR1V0ZEhsd1pUcHdaWEp6YjI1aGJDMXlaWEJzZVRzTkNnbG0NCmIyNTBMV1poYldsc2VUb2lRMkZzYVdKeWFTSXNJbk5oYm5NdGMyVnlhV1lpT3cwS0NXTnZiRzl5T2lNeFJqUTVOMFE3ZlEwS0xrMXoNCmIwTm9jRVJsWm1GMWJIUU5DZ2w3YlhOdkxYTjBlV3hsTFhSNWNHVTZaWGh3YjNKMExXOXViSGs3RFFvSlptOXVkQzF6YVhwbE9qRXcNCkxqQndkRHQ5RFFwQWNHRm5aU0JYYjNKa1UyVmpkR2x2YmpFTkNnbDdjMmw2WlRvNExqVnBiaUF4TVM0d2FXNDdEUW9KYldGeVoybHUNCk9qRXVNR2x1SURFdU1HbHVJREV1TUdsdUlERXVNR2x1TzMwTkNtUnBkaTVYYjNKa1UyVmpkR2x2YmpFTkNnbDdjR0ZuWlRwWGIzSmsNClUyVmpkR2x2YmpFN2ZRMEtMUzArUEM5emRIbHNaVDQ4SVMwdFcybG1JR2QwWlNCdGMyOGdPVjArUEhodGJENE5Danh2T25Ob1lYQmwNClpHVm1ZWFZzZEhNZ2RqcGxlSFE5SW1Wa2FYUWlJSE53YVdSdFlYZzlJakV3TWpZaUlDOCtEUW84TDNodGJENDhJVnRsYm1ScFpsMHQNCkxUNDhJUzB0VzJsbUlHZDBaU0J0YzI4Z09WMCtQSGh0YkQ0TkNqeHZPbk5vWVhCbGJHRjViM1YwSUhZNlpYaDBQU0psWkdsMElqNE4NCkNqeHZPbWxrYldGd0lIWTZaWGgwUFNKbFpHbDBJaUJrWVhSaFBTSXhJaUF2UGcwS1BDOXZPbk5vWVhCbGJHRjViM1YwUGp3dmVHMXMNClBqd2hXMlZ1WkdsbVhTMHRQand2YUdWaFpENDhZbTlrZVNCc1lXNW5QVVZPTFZWVElHeHBibXM5WW14MVpTQjJiR2x1YXoxd2RYSncNCmJHVStQR1JwZGlCamJHRnpjejFYYjNKa1UyVmpkR2x2YmpFK1BIQWdZMnhoYzNNOVRYTnZUbTl5YldGc1BqeHpjR0Z1SUhOMGVXeGwNClBTZGpiMnh2Y2pvak1VWTBPVGRFSno1SGJ5QmhkWFJ2WW05MGN5QThMM053WVc0K1BITndZVzRnYzNSNWJHVTlKMlp2Ym5RdFptRnQNCmFXeDVPbGRwYm1ka2FXNW5jenRqYjJ4dmNqb2pNVVkwT1RkRUp6NUtQQzl6Y0dGdVBqeHpjR0Z1SUhOMGVXeGxQU2RqYjJ4dmNqb2oNCk1VWTBPVGRFSno0OGJ6cHdQand2Ynpwd1Bqd3ZjM0JoYmo0OEwzQStQSEFnWTJ4aGMzTTlUWE52VG05eWJXRnNQanh6Y0dGdUlITjANCmVXeGxQU2RqYjJ4dmNqb2pNVVkwT1RkRUp6NDhienB3UGladVluTndPend2Ynpwd1Bqd3ZjM0JoYmo0OEwzQStQR1JwZGo0OGNDQmoNCmJHRnpjejFOYzI5T2IzSnRZV3crUEhOd1lXNGdjM1I1YkdVOUoyWnZiblF0YzJsNlpUb3hNQzR3Y0hRN1ptOXVkQzFtWVcxcGJIazYNCklrRnlhV0ZzSWl3aWMyRnVjeTF6WlhKcFppSTdZMjlzYjNJNkl6YzJPVEl6UXljK1ZHaGhibXR6SUdGdVpDQlNaV2RoY21SekxEeHYNCk9uQStQQzl2T25BK1BDOXpjR0Z1UGp3dmNENDhjQ0JqYkdGemN6MU5jMjlPYjNKdFlXdytQR0krUEhOd1lXNGdjM1I1YkdVOUoyWnYNCmJuUXRjMmw2WlRveE1DNHdjSFE3Wm05dWRDMW1ZVzFwYkhrNklrRnlhV0ZzSWl3aWMyRnVjeTF6WlhKcFppSTdZMjlzYjNJNkl6YzINCk9USXpReWMrVW1GMmFTQkVaWE5vYlhWcmFEd3ZjM0JoYmo0OEwySStQR0krUEhOd1lXNGdjM1I1YkdVOUoyWnZiblF0YzJsNlpUbzQNCkxqQndkRHRtYjI1MExXWmhiV2xzZVRvaVFYSnBZV3dpTENKellXNXpMWE5sY21sbUlqdGpiMnh2Y2pvak56WTVNak5ESno0Z1BDOXoNCmNHRnVQand2WWo0OGMzQmhiaUJ6ZEhsc1pUMG5abTl1ZEMxemFYcGxPamd1TUhCME8yWnZiblF0Wm1GdGFXeDVPaUpCY21saGJDSXMNCkluTmhibk10YzJWeWFXWWlPMk52Ykc5eU9pTTNOamt5TTBNblBud2dRM2xpWlhKelpXTjFjbWwwZVNCVVpXTm9ibTlzYjJkNUlId2cNClNsQk5iM0puWVc0Z1EyaGhjMlVnZkNBNE9EQWdVRzkzWkdWeUlFMXBiR3dnVW05aFpDd2dSbXh2YjNJZ01EUXNJRmRwYkcxcGJtZDANCmIyNHNJRVJGTENBeE9UZ3dNeUI4SUNzeElDZ3pNRElwTFRVeE5pMHlNVFV5S0ZjcFBHODZjRDQ4TDI4NmNENDhMM053WVc0K1BDOXcNClBqd3ZaR2wyUGp4d0lHTnNZWE56UFUxemIwNXZjbTFoYkQ0OGMzQmhiaUJ6ZEhsc1pUMG5ZMjlzYjNJNkl6RkdORGszUkNjK1BHODYNCmNENG1ibUp6Y0RzOEwyODZjRDQ4TDNOd1lXNCtQQzl3UGp4a2FYWStQR1JwZGlCemRIbHNaVDBuWW05eVpHVnlPbTV2Ym1VN1ltOXkNClpHVnlMWFJ2Y0RwemIyeHBaQ0FqUWpWRE5FUkdJREV1TUhCME8zQmhaR1JwYm1jNk15NHdjSFFnTUdsdUlEQnBiaUF3YVc0blBqeHcNCklHTnNZWE56UFUxemIwNXZjbTFoYkQ0OFlqNDhjM0JoYmlCemRIbHNaVDBuWm05dWRDMXphWHBsT2pFd0xqQndkRHRtYjI1MExXWmgNCmJXbHNlVG9pVkdGb2IyMWhJaXdpYzJGdWN5MXpaWEpwWmlJblBrWnliMjA2UEM5emNHRnVQand2WWo0OGMzQmhiaUJ6ZEhsc1pUMG4NClptOXVkQzF6YVhwbE9qRXdMakJ3ZER0bWIyNTBMV1poYldsc2VUb2lWR0ZvYjIxaElpd2ljMkZ1Y3kxelpYSnBaaUluUGlCRVpYWmwNCmNtRXNJRUZoY205dUlEeGljajQ4WWo1VFpXNTBPand2WWo0Z1ZIVmxjMlJoZVN3Z1UyVndkR1Z0WW1WeUlERTVMQ0F5TURFM0lESTYNCk5ETWdVRTA4WW5JK1BHSStWRzg2UEM5aVBpQkRlV0psY25ObFkzVnlhWFI1SUVGMWRHOXRZWFJwYjI0OFluSStQR0krVTNWaWFtVmoNCmREbzhMMkkrSUVGMWRHOXRZWFJwYjI0Z1EyaGhkQ0F0SUVkUElHeHBibXM4Ynpwd1Bqd3ZienB3UGp3dmMzQmhiajQ4TDNBK1BDOWsNCmFYWStQQzlrYVhZK1BIQWdZMnhoYzNNOVRYTnZUbTl5YldGc1BqeHZPbkErSm01aWMzQTdQQzl2T25BK1BDOXdQanh3SUdOc1lYTnoNClBVMXpiMDV2Y20xaGJENUdXVWs2UEc4NmNENDhMMjg2Y0Q0OEwzQStQSEFnWTJ4aGMzTTlUWE52VG05eWJXRnNQanh2T25BK0ptNWkNCmMzQTdQQzl2T25BK1BDOXdQanh3SUdOc1lYTnpQVTF6YjA1dmNtMWhiRDVVYUdVZ1FXUnZZbVVnYzJOeVpXVnVjMmhoY21VdlkyaGgNCmRDQmpZVzRnYm05M0lHSmxJSEpsWVdOb1pXUWdZWFFnUEdJK1oyOHZZWFYwYjJOb1lYUThMMkkrUEc4NmNENDhMMjg2Y0Q0OEwzQSsNClBIQWdZMnhoYzNNOVRYTnZUbTl5YldGc1BqeHZPbkErSm01aWMzQTdQQzl2T25BK1BDOXdQanh3SUdOc1lYTnpQVTF6YjA1dmNtMWgNCmJENUJZWEp2YmlCRVpWWmxjbUVnZkNCa1pYTnJPaUFyTVMweU1ERXRNamN6TFRVME1qVWdmQ0IwY0RvZ05UQXlPRGcxSUh3Z2JXOWkNCmFXeGxPaVp1WW5Od095QTVNamt0TWpZd0xUZ3dOalVnZkNCbGJXRnBiRG9nUEdFZ2FISmxaajBpYldGcGJIUnZPbUZoY205dUxtUmwNCmRtVnlZVUJxY0cxamFHRnpaUzVqYjIwaVBtRmhjbTl1TG1SbGRtVnlZVUJxY0cxamFHRnpaUzVqYjIwOEwyRStQRzg2Y0Q0OEwyODYNCmNENDhMM0ErUEhBZ1kyeGhjM005VFhOdlRtOXliV0ZzUGp4dk9uQStKbTVpYzNBN1BDOXZPbkErUEM5d1Bqd3ZaR2wyUGp3dlltOWsNCmVUNDhMMmgwYld3K0FBQUFBQUFBQUFBQTlpa0RKRWNwUUppSWpyck1tc0YycmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFFRkFBQUFBQUFGRlFBQUFKUGpZa2dyUFFGMmdvdW1LUHNQR1FBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQlFBQUFBQUFCUlVBQUFDVDQySklLejBCZG9LTHBpajcNCkR4a0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUVVBQUFBQUFBVVZBQUFBaytOaVNDczkNCkFYYUNpNllvK3c4WkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRUZBQUFBQUFBRkZRQUENCkFKUGpZa2dyUFFGMmdvdW1LUHNQR1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCSkFHNEENCllnQnZBSGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFMd0JQQUQwQVF3QlBBRklBVUFCRkFGZ0FRd0JJQUVFQVRnQkhBRVVBTHdCUEFGVUFQUUJGQUZnQVF3QklBRUVBVGdCSEFFVUENCklBQkJBRVFBVFFCSkFFNEFTUUJUQUZRQVVnQkJBRlFBU1FCV0FFVUFJQUJIQUZJQVR3QlZBRkFBSUFBb0FFWUFXUUJFQUVrQVFnQlANCkFFZ0FSZ0F5QURNQVV3QlFBRVFBVEFCVUFDa0FMd0JEQUU0QVBRQlNBRVVBUXdCSkFGQUFTUUJGQUU0QVZBQlRBQzhBUXdCT0FEMEENClVnQkJBRllBU1FBdUFGZ0FMZ0JFQUVVQVV3QklBRTBBVlFCTEFFZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRVVBV0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkZXRG92VHoxRFQxSlFSVmhEU0VGT1IwVXYNClQxVTlSVmhEU0VGT1IwVWdRVVJOU1U1SlUxUlNRVlJKVmtVZ1IxSlBWVkFnS0VaWlJFbENUMGhHTWpOVFVFUk1WQ2t2UTA0OVVrVkQNClNWQkpSVTVVVXk5RFRqMVNRVlpKTGxndVJFVlRTRTFWUzBnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVRQVpRQnoNCkFHZ0FiUUIxQUdzQWFBQXNBQ0FBVWdCaEFIWUFhUUFnQUZnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBM0tkQXlNQkNFQnEwdVFnQUt5L2hnZ0VBQUFBQUFBQUFMMjg5UTI5eWNFVjRZMmhoYm1kbEwyOTFQVVY0WTJoaGJtZGwNCklFRmtiV2x1YVhOMGNtRjBhWFpsSUVkeWIzVndJQ2hHV1VSSlFrOUlSakl6VTFCRVRGUXBMMk51UFZKbFkybHdhV1Z1ZEhNdlkyNDkNCmNtRjJhUzU0TG1SbGMyaHRkV3RvQUR3eFpXWTROREJsWWpVNE5UazBaVGs1WVdWbE1qWmxNekJoWlRRNE1qVXlZVUJKUTFCRlJFTXgNCk1EQXhNRFl1WlhoamFHRmtMbXB3YldOb1lYTmxMbTVsZEQ0QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFMd0JQQUQwQVF3QlBBRklBVUFCRkFGZ0FRd0JJQUVFQVRnQkgNCkFFVUFMd0JQQUZVQVBRQkZBRmdBUXdCSUFFRUFUZ0JIQUVVQUlBQkJBRVFBVFFCSkFFNEFTUUJUQUZRQVVnQkJBRlFBU1FCV0FFVUENCklBQkhBRklBVHdCVkFGQUFJQUFvQUVZQVdRQkVBRWtBUWdCUEFFZ0FSZ0F5QURNQVV3QlFBRVFBVEFCU0FHVUFZd0JsQUdrQWRnQmwNCkFHUUFPZ0FnQUdZQWNnQnZBRzBBSUFCVEFFVUFSd0JGQUZnQU1BQTBBRGNBTGdCbEFIZ0FZd0JvQUdFQVpBQXVBR29BY0FCdEFHTUENCmFBQmhBSE1BWlFBdUFHNEFaUUIwQUNBQUtBQXhBRFlBT1FBdUFERUFNZ0F4QUM0QU1nQTBBREFBTGdBM0FERUFLUUFnQUdJQWVRQU4NCkFBb0FJQUJUQUVNQVFRQkZBRmdBTUFBMEFEY0FMZ0JsQUhnQVl3Qm9BR0VBWkFBdUFHb0FjQUJ0QUdNQWFBQmhBSE1BWlFBdUFHNEENClpRQjBBQ0FBS0FBeEFEWUFPUUF1QURFQU1nQXhBQzRBTWdBMEFESUFMZ0EzQURFQUtRQWdBSGNBYVFCMEFHZ0FJQUJOQUdrQVl3QnkNCkFHOEFjd0J2QUdZQWRBQWdBRk1BVFFCVUFGQUFJQUJUQUdVQWNnQjJBR1VBY2dBTkFBb0FJQUFvQUZRQVRBQlRBQ2tBSUFCcEFHUUENCklBQXhBRFVBTGdBd0FDNEFNUUF5QURrQU13QXVBRElBSUFCMkFHa0FZUUFnQUUwQVlRQnBBR3dBWWdCdkFIZ0FJQUJVQUhJQVlRQnUNCkFITUFjQUJ2QUhJQWRBQTdBQ0FBVkFCMUFHVUFMQUFnQURFQU9RQWdBRk1BWlFCd0FDQUFNZ0F3QURFQU53QWdBREVBTkFBNkFEUUENCk5BQTZBREFBTUFBZ0FDMEFNQUEwQURBQU1BQU5BQW9BVWdCbEFHTUFaUUJwQUhZQVpRQmtBRG9BSUFCbUFISUFid0J0QUNBQVV3QkYNCkFFY0FSUUJZQURBQU5nQXdBQzRBWlFCNEFHTUFhQUJoQUdRQUxnQnFBSEFBYlFCakFHZ0FZUUJ6QUdVQUxnQnVBR1VBZEFBZ0FDZ0ENCk1RQTJBRGtBTGdBeEFESUFNUUF1QURJQU5BQXdBQzRBT0FBNEFDa0FJQUJpQUhrQURRQUtBQ0FBVXdCRkFFY0FSUUJZQURBQU5BQTMNCkFDNEFaUUI0QUdNQWFBQmhBR1FBTGdCcUFIQUFiUUJqQUdnQVlRQnpBR1VBTGdCdUFHVUFkQUFnQUNnQU1RQTJBRGtBTGdBeEFESUENCk1RQXVBRElBTkFBd0FDNEFOd0F4QUNrQUlBQjNBR2tBZEFCb0FDQUFUUUJwQUdNQWNnQnZBSE1BYndCbUFIUUFJQUJUQUUwQVZBQlENCkFDQUFVd0JsQUhJQWRnQmxBSElBRFFBS0FDQUFLQUJVQUV3QVV3QXBBQ0FBYVFCa0FDQUFNUUExQUM0QU1BQXVBREVBTWdBNUFETUENCkxnQXlBRHNBSUFCVUFIVUFaUUFzQUNBQU1RQTVBQ0FBVXdCbEFIQUFJQUF5QURBQU1RQTNBQ0FBTVFBekFEb0FOQUF6QURvQU5RQTUNCkFDQUFMUUF3QURVQU1BQXdBQTBBQ2dCU0FHVUFZd0JsQUdrQWRnQmxBR1FBT2dBZ0FHWUFjZ0J2QUcwQUlBQkpBRU1BVUFCRkFFUUENClF3QXhBREFBTUFBeEFEQUFOZ0F1QUdVQWVBQmpBR2dBWVFCa0FDNEFhZ0J3QUcwQVl3Qm9BR0VBY3dCbEFDNEFiZ0JsQUhRQUlBQW8NCkFERUFOZ0E1QUM0QU1RQXlBRElBTGdBeEFEa0FOd0F1QURRQU1RQXBBQ0FBWWdCNUFBMEFDZ0FnQUZNQVJRQkhBRVVBV0FBd0FEWUENCk1BQXVBR1VBZUFCakFHZ0FZUUJrQUM0QWFnQndBRzBBWXdCb0FHRUFjd0JsQUM0QWJnQmxBSFFBSUFBb0FERUFOZ0E1QUM0QU1RQXkNCkFERUFMZ0F5QURRQU1BQXVBRGdBT0FBcEFDQUFkd0JwQUhRQWFBQWdBRTBBYVFCakFISUFid0J6QUc4QVpnQjBBQ0FBVXdCTkFGUUENClVBQWdBRk1BWlFCeUFIWUFaUUJ5QUEwQUNnQWdBQ2dBVkFCTUFGTUFLUUFnQUdrQVpBQWdBREVBTlFBdUFEQUFMZ0F4QURJQU9RQXoNCkFDNEFNZ0E3QUNBQVZBQjFBR1VBTEFBZ0FERUFPUUFnQUZNQVpRQndBQ0FBTWdBd0FERUFOd0FnQURFQU13QTZBRFFBTXdBNkFEVUENCk5RQWdBQzBBTUFBMUFEQUFNQUFOQUFvQVVnQmxBR01BWlFCcEFIWUFaUUJrQURvQUlBQm1BSElBYndCdEFDQUFTUUJEQUZBQVJRQkUNCkFFTUFNUUF3QURBQU1RQXdBRFlBTGdCbEFIZ0FZd0JvQUdFQVpBQXVBR29BY0FCdEFHTUFhQUJoQUhNQVpRQXVBRzRBWlFCMEFDQUENCktBQmJBREVBTmdBNUFDNEFNUUF5QURJQUxnQXhBRGtBTndBdUFEUUFNUUJkQUNrQUlBQmlBSGtBRFFBS0FDQUFTUUJEQUZBQVJRQkUNCkFFTUFNUUF3QURBQU1RQXdBRFlBTGdCbEFIZ0FZd0JvQUdFQVpBQXVBR29BY0FCdEFHTUFhQUJoQUhNQVpRQXVBRzRBWlFCMEFDQUENCktBQmJBREVBTmdBNUFDNEFNUUF5QURJQUxnQXhBRGtBTndBdUFEUUFNUUJkQUNrQUlBQjNBR2tBZEFCb0FDQUFiUUJoQUhBQWFRQWcNCkFHa0FaQUFOQUFvQUlBQXhBRFVBTGdBd0FEQUFMZ0F4QURJQU9RQXpBQzRBTUFBd0FESUFPd0FnQUZRQWRRQmxBQ3dBSUFBeEFEa0ENCklBQlRBR1VBY0FBZ0FESUFNQUF4QURjQUlBQXhBRE1BT2dBMEFETUFPZ0ExQURVQUlBQXRBREFBTlFBd0FEQUFEUUFLQUVNQWJ3QnUNCkFIUUFaUUJ1QUhRQUxRQlVBSGtBY0FCbEFEb0FJQUJoQUhBQWNBQnNBR2tBWXdCaEFIUUFhUUJ2QUc0QUx3QnRBSE1BTFFCMEFHNEENClpRQm1BRHNBSUFCdUFHRUFiUUJsQUQwQUlnQjNBR2tBYmdCdEFHRUFhUUJzQUM0QVpBQmhBSFFBSWdBTkFBb0FRd0J2QUc0QWRBQmwNCkFHNEFkQUF0QUZRQWNnQmhBRzRBY3dCbUFHVUFjZ0F0QUVVQWJnQmpBRzhBWkFCcEFHNEFad0E2QUNBQVlnQnBBRzRBWVFCeUFIa0ENCkRRQUtBRVlBY2dCdkFHMEFPZ0FnQUNJQVJBQmxBSE1BYUFCdEFIVUFhd0JvQUN3QUlBQlNBR0VBZGdCcEFDQUFXQUFpQUNBQVBBQnkNCkFHRUFkZ0JwQUM0QWVBQXVBR1FBWlFCekFHZ0FiUUIxQUdzQWFBQkFBR01BYUFCaEFITUFaUUF1QUdNQWJ3QnRBRDRBRFFBS0FGUUENCmJ3QTZBQ0FBSWdCRUFHVUFkZ0JsQUhJQVlRQXNBQ0FBUVFCaEFISUFid0J1QUNJQUlBQThBR0VBWVFCeUFHOEFiZ0F1QUdRQVpRQjINCkFHVUFjZ0JoQUVBQWFnQndBRzBBWXdCb0FHRUFjd0JsQUM0QVl3QnZBRzBBUGdBc0FDQUFRd0I1QUdJQVpRQnlBSE1BWlFCakFIVUENCmNnQnBBSFFBZVFBZ0FFRUFkUUIwQUc4QWJRQmhBSFFBYVFCdkFHNEFEUUFLQUFrQVBBQkRBSGtBWWdCbEFISUFjd0JsQUdNQWRRQnkNCkFHa0FkQUI1QUY4QVFRQjFBSFFBYndCdEFHRUFkQUJwQUc4QWJnQkFBSElBWlFCekFIUUFjZ0JwQUdNQWRBQmxBR1FBTGdCakFHZ0ENCllRQnpBR1VBTGdCakFHOEFiUUErQUEwQUNnQlRBSFVBWWdCcUFHVUFZd0IwQURvQUlBQlNBRVVBT2dBZ0FFRUFkUUIwQUc4QWJRQmgNCkFIUUFhUUJ2QUc0QUlBQkRBR2dBWVFCMEFDQUFMUUFnQUVjQVR3QWdBR3dBYVFCdUFHc0FEUUFLQUZRQWFBQnlBR1VBWVFCa0FDMEENClZBQnZBSEFBYVFCakFEb0FJQUJCQUhVQWRBQnZBRzBBWVFCMEFHa0Fid0J1QUNBQVF3Qm9BR0VBZEFBZ0FDMEFJQUJIQUU4QUlBQnMNCkFHa0FiZ0JyQUEwQUNnQlVBR2dBY2dCbEFHRUFaQUF0QUVrQWJnQmtBR1VBZUFBNkFDQUFRUUJrQUUwQWVBQmtBSGdBVmdCRkFEa0ENCmFRQnJBRVFBU2dCRkFHTUFjQUJSQUVvQWFRQkpBR29BY2dCeUFFMEFiUUJ6QUVZQU1nQnlBR2NBUVFCQkFFSUFNQUJpQUZFQURRQUsNCkFFUUFZUUIwQUdVQU9nQWdBRlFBZFFCbEFDd0FJQUF4QURrQUlBQlRBR1VBY0FBZ0FESUFNQUF4QURjQUlBQXhBRE1BT2dBMEFETUENCk9nQTFBRFVBSUFBdEFEQUFOUUF3QURBQURRQUtBRTBBWlFCekFITUFZUUJuQUdVQUxRQkpBRVFBT2dBZ0FEd0FNUUJsQUdZQU9BQTANCkFEQUFaUUJpQURVQU9BQTFBRGtBTkFCbEFEa0FPUUJoQUdVQVpRQXlBRFlBWlFBekFEQUFZUUJsQURRQU9BQXlBRFVBTWdCaEFFQUENClNRQkRBRkFBUlFCRUFFTUFNUUF3QURBQU1RQXdBRFlBTGdCbEFIZ0FZd0JvQUdFQVpBQXVBR29BY0FCdEFHTUFhQUJoQUhNQVpRQXUNCkFHNEFaUUIwQUQ0QURRQUtBRklBWlFCbUFHVUFjZ0JsQUc0QVl3QmxBSE1BT2dBZ0FEd0FZd0EyQURJQU9BQTBBR1lBWlFBM0FEWUENCk1nQXlBRFVBTkFBM0FEUUFZZ0E0QUdJQVpRQTRBRE1BTWdCbEFEY0FOZ0EwQURRQVpRQmtBR1FBTmdBeEFFQUFVd0JEQUVFQVJRQlkNCkFEQUFOUUE1QUM0QVpRQjRBR01BYUFCaEFHUUFMZ0JxQUhBQWJRQmpBR2dBWVFCekFHVUFMZ0J1QUdVQWRBQStBQTBBQ2dCSkFHNEENCkxRQlNBR1VBY0FCc0FIa0FMUUJVQUc4QU9nQWdBRHdBWXdBMkFESUFPQUEwQUdZQVpRQTNBRFlBTWdBeUFEVUFOQUEzQURRQVlnQTQNCkFHSUFaUUE0QURNQU1nQmxBRGNBTmdBMEFEUUFaUUJrQUdRQU5nQXhBRUFBVXdCREFFRUFSUUJZQURBQU5RQTVBQzRBWlFCNEFHTUENCmFBQmhBR1FBTGdCcUFIQUFiUUJqQUdnQVlRQnpBR1VBTGdCdUFHVUFkQUErQUEwQUNnQkJBR01BWXdCbEFIQUFkQUF0QUV3QVlRQnUNCkFHY0FkUUJoQUdjQVpRQTZBQ0FBWlFCdUFDMEFWUUJUQUEwQUNnQkRBRzhBYmdCMEFHVUFiZ0IwQUMwQVRBQmhBRzRBWndCMUFHRUENClp3QmxBRG9BSUFCbEFHNEFMUUJWQUZNQURRQUtBRmdBTFFCTkFGTUFMUUJJQUdFQWN3QXRBRUVBZEFCMEFHRUFZd0JvQURvQURRQUsNCkFGZ0FMUUJOQUZNQUxRQkZBSGdBWXdCb0FHRUFiZ0JuQUdVQUxRQlBBSElBWndCaEFHNEFhUUI2QUdFQWRBQnBBRzhBYmdBdEFGTUENClF3Qk1BRG9BSUFBdEFERUFEUUFLQUZnQUxRQk5BRk1BTFFCVUFFNEFSUUJHQUMwQVF3QnZBSElBY2dCbEFHd0FZUUIwQUc4QWNnQTYNCkFDQUFQQUF4QUdVQVpnQTRBRFFBTUFCbEFHSUFOUUE0QURVQU9RQTBBR1VBT1FBNUFHRUFaUUJsQURJQU5nQmxBRE1BTUFCaEFHVUENCk5BQTRBRElBTlFBeUFHRUFRQUJKQUVNQVVBQkZBRVFBUXdBeEFEQUFNQUF4QURBQU5nQXVBR1VBZUFCakFHZ0FZUUJrQUM0QWFnQncNCkFHMEFZd0JvQUdFQWN3QmxBQzRBYmdCbEFIUUFQZ0FOQUFvQVRRQkpBRTBBUlFBdEFGWUFaUUJ5QUhNQWFRQnZBRzRBT2dBZ0FERUENCkxnQXdBQTBBQ2dCWUFDMEFUUUJUQUMwQVJRQjRBR01BYUFCaEFHNEFad0JsQUMwQVZBQnlBR0VBYmdCekFIQUFid0J5QUhRQUxRQkcNCkFISUFid0J0QUVVQWJnQjBBR2tBZEFCNUFFZ0FaUUJoQUdRQVpRQnlBRG9BSUFCSUFHOEFjd0IwQUdVQVpBQU5BQW9BV0FBdEFFMEENClV3QXRBRVVBZUFCakFHZ0FZUUJ1QUdjQVpRQXRBRThBY2dCbkFHRUFiZ0JwQUhvQVlRQjBBR2tBYndCdUFDMEFUUUJsQUhNQWN3QmgNCkFHY0FaUUJFQUdrQWNnQmxBR01BZEFCcEFHOEFiZ0JoQUd3QWFRQjBBSGtBT2dBZ0FFOEFjZ0JwQUdjQWFRQnVBR0VBZEFCcEFHNEENClp3QU5BQW9BV0FBdEFFMEFVd0F0QUVVQWVBQmpBR2dBWVFCdUFHY0FaUUF0QUU4QWNnQm5BR0VBYmdCcEFIb0FZUUIwQUdrQWJ3QnUNCkFDMEFRUUIxQUhRQWFBQlRBRzhBZFFCeUFHTUFaUUE2QUNBQVNRQkRBRkFBUlFCRUFFTUFNUUF3QURBQU1RQXdBRFlBTGdCbEFIZ0ENCll3Qm9BR0VBWkFBdUFHb0FjQUJ0QUdNQWFBQmhBSE1BWlFBdUFHNEFaUUIwQUEwQUNnQllBQzBBVFFCVEFDMEFSUUI0QUdNQWFBQmgNCkFHNEFad0JsQUMwQVR3QnlBR2NBWVFCdUFHa0FlZ0JoQUhRQWFRQnZBRzRBTFFCQkFIVUFkQUJvQUVFQWN3QTZBQ0FBU1FCdUFIUUENClpRQnlBRzRBWVFCc0FBMEFDZ0JZQUMwQVRRQlRBQzBBUlFCNEFHTUFhQUJoQUc0QVp3QmxBQzBBVHdCeUFHY0FZUUJ1QUdrQWVnQmgNCkFIUUFhUUJ2QUc0QUxRQkJBSFVBZEFCb0FFMEFaUUJqQUdnQVlRQnVBR2tBY3dCdEFEb0FJQUF3QURNQURRQUtBRmdBTFFCUEFISUENCmFRQm5BR2tBYmdCaEFIUUFhUUJ1QUdjQUxRQkpBRkFBT2dBZ0FGc0FNUUF3QUM0QU1RQTBBRGtBTGdBM0FERUFMZ0EwQURRQVhRQU4NCkFBb0FXQUF0QUUwQVV3QXRBRVVBZUFCakFHZ0FZUUJ1QUdjQVpRQXRBRThBY2dCbkFHRUFiZ0JwQUhvQVlRQjBBR2tBYndCdUFDMEENClRnQmxBSFFBZHdCdkFISUFhd0F0QUUwQVpRQnpBSE1BWVFCbkFHVUFMUUJKQUdRQU9nQWdBREFBT1FBd0FEWUFNZ0E0QURrQVpBQXQNCkFETUFZUUJpQURVQUxRQTBBR1VBTndBMUFDMEFOUUJsQUdRQU1nQXRBREFBT0FCa0FEUUFaZ0JtQURnQVpRQTJBREVBWXdCaEFBMEENCkNnQlNBR1VBZEFCMUFISUFiZ0F0QUZBQVlRQjBBR2dBT2dBZ0FISUFZUUIyQUdrQUxnQjRBQzRBWkFCbEFITUFhQUJ0QUhVQWF3Qm8NCkFFQUFZd0JvQUdFQWN3QmxBQzRBWXdCdkFHMEFEUUFLQUZnQUxRQk5BRk1BTFFCRkFIZ0FZd0JvQUdFQWJnQm5BR1VBTFFCUEFISUENClp3QmhBRzRBYVFCNkFHRUFkQUJwQUc4QWJnQXRBRUVBVmdCVEFIUUFZUUJ0QUhBQUxRQkZBRzRBZEFCbEFISUFjQUJ5QUdrQWN3QmwNCkFEb0FJQUF4QUM0QU1BQU5BQW9BV0FBdEFFb0FVQUJOQUVNQUxRQlRBR1VBYmdCa0FHVUFjZ0JVQUhJQWRRQnpBSFFBT2dBZ0FFb0ENClVBQk5BRU1BRFFBS0FGZ0FMUUJCQUhVQWRBQnZBQzBBVWdCbEFITUFjQUJ2QUc0QWN3QmxBQzBBVXdCMUFIQUFjQUJ5QUdVQWN3QnoNCkFEb0FJQUJFQUZJQUxBQWdBRThBVHdCR0FDd0FJQUJCQUhVQWRBQnZBRklBWlFCd0FHd0FlUUFOQUFvQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEKy8vLy8vdi8vL3dNQkFBQUVBUUFBL3YvLy8vNy8NCi8vLysvLy8vL3YvLy93a0JBQUFLQVFBQUN3RUFBUDcvLy8vKy8vLy9EZ0VBQVA3Ly8vOFFBUUFBL3YvLy8vNy8vLzhUQVFBQS92Ly8NCi8vNy8vLzhXQVFBQS92Ly8vLzcvLy84WkFRQUEvdi8vL3hzQkFBRCsvLy8vL3YvLy94NEJBQUFmQVFBQUlBRUFBQ0VCQUFBaUFRQUENCkl3RUFBQ1FCQUFBbEFRQUFKZ0VBQUNjQkFBQW9BUUFBS1FFQUFDb0JBQUFyQVFBQUxBRUFBQzBCQUFBdUFRQUFMd0VBQURBQkFBQXgNCkFRQUFNZ0VBQURNQkFBQTBBUUFBTlFFQUFEWUJBQUEzQVFBQU9BRUFBRGtCQUFBNkFRQUFPd0VBQUR3QkFBQTlBUUFBUGdFQUFQNy8NCi8vLysvLy8vUVFFQUFFSUJBQUJEQVFBQS92Ly8vLzcvLy8vKy8vLy8vdi8vLy83Ly8vOUpBUUFBL3YvLy8vNy8vLy8rLy8vL1RRRUENCkFFNEJBQUQrLy8vL1VBRUFBRkVCQUFEKy8vLy8vdi8vLzFRQkFBRCsvLy8vVmdFQUFGY0JBQUQrLy8vLy92Ly8vMW9CQUFCYkFRQUENClhBRUFBUDcvLy8vKy8vLy8vdi8vLzJBQkFBQmhBUUFBWWdFQUFHTUJBQUJrQVFBQVpRRUFBR1lCQUFCbkFRQUEvdi8vLzJrQkFBQnENCkFRQUEvdi8vLy83Ly8vLysvLy8vL3YvLy8vNy8vLy8rLy8vLy92Ly8vLzcvLy85ekFRQUEvdi8vLzNVQkFBRCsvLy8vL3YvLy8zZ0INCkFBRCsvLy8vZWdFQUFQNy8vLy8rLy8vL2ZRRUFBSDRCQUFEKy8vLy8vdi8vLzFRQUtRQXZBRU1BVGdBOUFGSUFSUUJEQUVrQVVBQkoNCkFFVUFUZ0JVQUZNQUx3QkRBRTRBUFFCRkFEUUFPQUF6QURrQU1BQTRBQUFBQUFBQUFBQUFBQUJGQUZnQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFMd0JQQUQwQVF3QlANCkFGSUFVQUJGQUZnQVF3QklBRUVBVGdCSEFFVUFMd0JQQUZVQVBRQkZBRmdBUXdCSUFFRUFUZ0JIQUVVQUlBQkJBRVFBVFFCSkFFNEENClNRQlRBRlFBVWdCQkFGUUFTUUJXQUVVQUlBQkhBRklBVHdCVkFGQUFJQUFvQUVZQVdRQkVBRWtBUWdCUEFFZ0FSZ0F5QURNQVV3QlENCkFFUUFUQUJVQUNrQUx3QkRBRTRBUFFCU0FFVUFRd0JKQUZBQVNRQkZBRTRBVkFCVEFDOEFRd0JPQUQwQVJRQTBBRGdBTXdBNUFEQUENCk9BQUFBQUFBQUFBQUFBQUFSUUJZQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSFRNWGNWUlBZcEF5UkhLVUNZaUk2NnpKckJkcTRBQUFkRzBBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQkFIVUFkQUJ2QUcwQVlRQjBBR2tBYndCdUFDQUFRd0JvQUdFQWRBQWcNCkFDMEFJQUJIQUU4QUlBQnNBR2tBYmdCckFBQUFBQUFBQUFBQUFBQUFBQUFBTHdCUEFEMEFRd0JQQUZJQVVBQkZBRmdBUXdCSUFFRUENClRnQkhBRVVBTHdCUEFGVUFQUUJGQUZnQVF3QklBRUVBVGdCSEFFVUFJQUJCQUVRQVRRQkpBRTRBU1FCVEFGUUFVZ0JCQUZRQVNRQlcNCkFFVUFJQUJIQUZJQVR3QlZBRkFBSUFBb0FFWUFXUUJFQUVrQVFnQlBBRWdBUmdBeUFETUFVd0JRQUVRQVRBQlVBQ2tBTHdCREFFNEENClBRQlNBRVVBUXdCSkFGQUFTUUJGQUU0QVZBQlRBQzhBUXdCT0FEMEFVZ0JCQUZZQVNRQXVBRmdBTGdCRUFFVUFVd0JJQUUwQVZRQkwNCkFFZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBRVVBV0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQkZXRG92VHoxRFQxSlFSVmhEU0VGT1IwVXZUMVU5UlZoRFNFRk9SMFVnUVVSTlNVNUpVMVJTUVZSSlZrVWcNClIxSlBWVkFnS0VaWlJFbENUMGhHTWpOVFVFUk1WQ2t2UTA0OVVrVkRTVkJKUlU1VVV5OURUajFGTkRnek9UQTRBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVWWU9pOVBQVU5QVWxCRldFTklRVTVIUlM5UFZUMUZXRU5JUVU1SFJTQkINClJFMUpUa2xUVkZKQlZFbFdSU0JIVWs5VlVDQW9SbGxFU1VKUFNFWXlNMU5RUkV4VUtTOURUajFTUlVOSlVFbEZUbFJUTDBOT1BVVTANCk9ETTVNRGdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFWd0JoQUc0QVp3QXNBQ0FBUkFCaEFHNEENCllRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQURjcDBESXdFSVENCkdyUzVDQUFyTCtHQ0FRQUFBQUFBQUFBdlR6MURUMUpRUlZoRFNFRk9SMFV2VDFVOVJWaERTRUZPUjBVZ1FVUk5TVTVKVTFSU1FWUkoNClZrVWdSMUpQVlZBZ0tFWlpSRWxDVDBoR01qTlRVRVJNVkNrdlEwNDlVa1ZEU1ZCSlJVNVVVeTlEVGoxRk5EZ3pPVEE0QUFBQUFBQUENCkFBQUFSQUJsQUhNQWFBQnRBSFVBYXdCb0FDd0FJQUJTQUdFQWRnQnBBQ0FBV0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQURjcDBESXdFSVFHclM1Q0FBckwrR0NBUUFBQUFBQUFBQXZiejFEYjNKd1JYaGphR0Z1WjJVdmIzVTkNClJYaGphR0Z1WjJVZ1FXUnRhVzVwYzNSeVlYUnBkbVVnUjNKdmRYQWdLRVpaUkVsQ1QwaEdNak5UVUVSTVZDa3ZZMjQ5VW1WamFYQnANClpXNTBjeTlqYmoxeVlYWnBMbmd1WkdWemFHMTFhMmdBVndCaEFHNEFad0FzQUNBQVJBQmhBRzRBWVFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEY3AwREl3RUlRR3JTNUNBQXJMK0dDQVFBQUFBQUENCkFBQXZUejFEVDFKUVJWaERTRUZPUjBVdlQxVTlSVmhEU0VGT1IwVWdRVVJOU1U1SlUxUlNRVlJKVmtVZ1IxSlBWVkFnS0VaWlJFbEMNClQwaEdNak5UVUVSTVZDa3ZRMDQ5VWtWRFNWQkpSVTVVVXk5RFRqMUZORGd6T1RBNEFBQUFBQUFBQUFBQVJWZzZMMDg5UTA5U1VFVlkNClEwaEJUa2RGTDA5VlBVVllRMGhCVGtkRklFRkVUVWxPU1ZOVVVrRlVTVlpGSUVkU1QxVlFJQ2hHV1VSSlFrOUlSakl6VTFCRVRGUXANCkwwTk9QVkpGUTBsUVNVVk9WRk12UTA0OVVrRldTUzVZTGtSRlUwaE5WVXRJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQkpBRkFBVFFBdUFFNEFid0IwQUdVQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ0FBQUFBQUFBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUJBQUFjd0FnQUFBQkNJMEVhQk1kTUINClFBQUlNQUlBQUFBUWlOQkdnVEhUQVFNQTl3OENBQUFBQUFBQUFBRUFBQUFEQVBRUEFnQUFBQUlBQUFBQUFBQUFBd0FOTkFJQUFBQjUNCkRnUUFBQUFBQUI4QUJBNENBQUFBVWdBQUFBTUFSSFlmQUFNT0FnQUFBQUlBQUFBREFBQUFId0FDRGdJQUFBQUNBQUFBQXdBQUFBc0ENCkFnQUdBQUFBQVFBQUFBQUFBQUFEQUJjQUJnQUFBQUVBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU1RQXcNCkFERUFRd0F3QURFQU1BQXlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0dFQUFBQWhnQUFBUC8vLy84QUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNaQVFBQUNBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjANCkFHY0FNUUF1QURBQVh3QXhBREFBTUFBeEFEQUFNUUF3QURJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FYNEENCkFBQ0tBQUFBLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFKZ0JBQUFJQUFBQUFBQUENCkFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURFQU1BQXdBRVlBTUFBeEFEQUFNZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBcUFBSUIvLy8vLzQ0QUFBRC8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFsd0VBQUJnQUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm5BREVBTGdBd0FGOEFNUUF3QURFQU1RQXdBREVBTUFBeUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdHRkFBQUFpd0FBQVAvLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDV0FRQUFFQUFBQUFBQUFBQmZBRjhBY3dCMUFHSUFjd0IwQUdjQU1RQXVBREFBWHdBeEFEQUENCk1RQTVBREFBTVFBd0FESUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUtnQUNBZi8vLy8vLy8vLy8vLy8vL3dBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSlVCQUFBUUFBQUFBQUFBQUY4QVh3QnpBSFVBWWdCekFIUUENClp3QXhBQzRBTUFCZkFERUFNQUF3QUVFQU1BQXhBREFBTWdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFxQUFJQWlRQUENCkFJSUFBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWxBRUFBQkFBQUFBQUFBQUENClh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTVFBd0FERUFSQUF3QURFQU1BQXlBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUNvQUFnSC8vLy8valFBQUFQLy8vLzhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQ1RBUUFBRUFBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0FNUUF1QURBQVh3QXhBREFBTUFBd0FEQUFNUUF3QURJQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQVAvLy8vLy8vLy8vLy8vLy93QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUpJQkFBQUlBQUFBQUFBQUFGOEFYd0J6QUhVQVlnQnpBSFFBWndBeEFDNEFNQUJmQURFQU1BQXgNCkFESUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBcUFBSUIvLy8vLy8vLy8vLy8vLy8vQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFrUUVBQUJBQUFBQUFBQUFBWHdCZkFITUFkUUJpQUhNQWRBQm4NCkFERUFMZ0F3QUY4QU1RQXdBREFBT1FBd0FERUFNQUF5QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ29BQWdHUEFBQUENCi8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDUUFRQUFDQUFBQUFBQUFBQmYNCkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F4QURBQU1RQTNBREFBTVFBd0FESUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBS2dBQ0FJTUFBQUNBQUFBQS8vLy8vd0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFJOEJBQUFRQUFBQUFBQUFBRjhBWHdCekFIVUFZZ0J6QUhRQVp3QXhBQzRBTUFCZkFERUFNQUF4QURRQU1BQXhBREFBTWdBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQXFBQUlBaUFBQUFJd0FBQUQvLy8vL0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBamdFQUFCQUFBQUFBQUFBQVh3QmZBSE1BZFFCaUFITUFkQUJuQURFQUxnQXdBRjhBTVFBd0FERUENCk5nQXdBREVBTUFBeUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUNvQUFnR1FBQUFBLy8vLy8vLy8vLzhBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ05BUUFBQ0FBQUFBQUFBQUJmQUY4QWN3QjFBR0lBY3dCMEFHY0ENCk1RQXVBREFBWHdBeEFEQUFNUUJGQURBQU1RQXdBRElBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFLZ0FDQVAvLy8vLy8NCi8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUl3QkFBQVFBQUFBQUFBQUFGOEENClh3QnpBSFVBWWdCekFIUUFad0F4QUM0QU1BQmZBREVBTUFBeEFEQUFNQUF4QURBQU1nQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFxQUFJQS8vLy8vLy8vLy8vLy8vLy9BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCml3RUFBQkFBQUFBQUFBQUFYd0JmQUhNQWRRQmlBSE1BZEFCbkFERUFMZ0F3QUY4QU1RQXdBREFBTmdBd0FERUFNQUF5QUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDb0FBZ0QvLy8vLy8vLy8vLy8vLy84QUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUNLQVFBQUNBQUFBQUFBQUFCZkFGOEFjd0IxQUdJQWN3QjBBR2NBTVFBdUFEQUFYd0F4QURBQU1RQTENCkFEQUFNUUF3QURJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBS2dBQ0FQLy8vLy8vLy8vLy8vLy8vd0FBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFEOEJBQUFJQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBLy8vLy8vLy8NCi8vLy8vLy8vQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFELy8vLy8vLy8vLy8vLy8vOEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUC8vLy8vLy8vLy8vLy8vL3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUI4QUdnQUdBQUFBRWdBQUFBTUFBQUFEQUNZQUJnQUFBQUFBQUFBQUFBQUENCkN3QXBBQVlBQUFBQUFBQUFBQUFBQUFzQUt3QUdBQUFBQUFBQUFBQUFBQUFEQUM0QUJnQUFBQUFBQUFBQUFBQUFBd0EyQUFZQUFBQUENCkFBQUFBQUFBQUVBQU9RQUdBQUFBZ09mbFBuY3gwd0VDQVRzQUJnQUFBR2NBQUFBREFDZ01BZ0UvQUFZQUFBQjRBQUFBQXdBb0RCOEENClFBQUdBQUFBRmdBQUFBTUFBQUFDQVVFQUJnQUFBSUFBQUFBREFDZ01Id0JDQUFZQUFBQWlBQUFBQXdBQUFBSUJRd0FHQUFBQWVBQUENCkFBTUFLQXdmQUVRQUJnQUFBQllBQUFBREFBQUFBZ0ZSQUFZQUFBQmZBQUFBQXdBb0RBSUJVZ0FHQUFBQVh3QUFBQU1BS0F3ZkFHUUENCkJnQUFBQVlBQUFBREFBQUFId0JsQUFZQUFBRElBQUFBQXdBQUFCOEFjQUFHQUFBQU5BQUFBQU1BQUFBQ0FYRUFCZ0FBQUJzQUFBQUQNCkFDZ01Id0IxQUFZQUFBQUdBQUFBQXdBQUFCOEFkZ0FHQUFBQXVBQUFBQU1BQUFBZkFIY0FCZ0FBQUFZQUFBQURBQUFBSHdCNEFBWUENCkFBQzRBQUFBQXdBQUFCOEFmUUFHQUFBQW1oRUFBQU1BQUFBQ0FYOEFCZ0FBQUVRQUFBQURBQ2dNQ3dBR0RBWUFBQUFBQUFBQUFBQUENCkFBSUJHUXdHQUFBQWdBQUFBQU1BS0F3ZkFCb01CZ0FBQUNJQUFBQURBQUFBQWdFZERBWUFBQUJuQUFBQUF3QW9EQjhBSGd3R0FBQUENCkJnQUFBQU1BQUFBZkFCOE1CZ0FBQU1nQUFBQURBQUFBSHdBRkRnWUFBQUFNQUFBQUF3QUFBRUFBQmc0R0FBQUFkYWdrUW5jeDB3RUQNCkFBY09CZ0FBQUFNRUFBQUFBQUFBQXdBakRnWUFBQUQ0VEFRQUFBQUFBQU1BTHc0R0FBQUErRXdFQUFBQUFBQUNBVTBPQmdBQUFCd0ENCkFBQURBQ2dNQWdGT0RnWUFBQUFjQUFBQUF3QW9EQUlCV0E0R0FBQUFIQUFBQUFNQUtBd0NBVmtPQmdBQUFCd0FBQUFEQUNnTUN3RE4NCkRnWUFBQUFBQUFBQUFBQUFBRUFBQWc4R0FBQUFkYWdrUW5jeDB3RUNBUU1QQmdBQUFCQUFBQUFEQUNnTUFnRVRFQVlBQUFBM0RnQUENCkF3QW9EQjhBTlJBR0FBQUFpQUFBQUFNQUFBQWZBRGtRQmdBQUFJQUFBQUFEQUFBQUh3QkNFQVlBQUFDQUFBQUFBd0FBQUFNQWdCQUcNCkFBQUEvLy8vL3dBQUFBQUNBUXN3QmdBQUFCQUFBQUFEQUNnTUFnRVFNQVlBQUFCR0FBQUFBd0FvREFJQkV6QUdBQUFBRUFBQUFBTUENCktBd0NBUlF3QmdBQUFBd0FBQUFEQUNnTUN3QVdNQVlBQUFBQkFBQUFBQUFBQUFJQkdUQUdBQUFBRUFBQUFBTUFLQXdDQVJzd0JnQUENCkFBd0FBQUFEQUNnTVFBQWNNQVlBQUFBQTJEc1U2YjdUQVFNQUhUQUdBQUFBQUFBQUFBQUFBQUFMQUVBNkJnQUFBQUVBQUFBQUFBQUENCkF3RGVQd1lBQUFDZlRnQUFBQUFBQUFNQTN6OEdBQUFBTVFBQUFBQUFBQUFMQU9vL0JnQUFBQUVBQUFBQUFBQUFBd0R4UHdZQUFBQUoNCkJBQUFBQUFBQUI4QStEOEdBQUFBSWdBQUFBTUFBQUFDQWZrL0JnQUFBSUFBQUFBREFDZ01Id0Q2UHdZQUFBQWlBQUFBQXdBQUFBSUINCit6OEdBQUFBZ0FBQUFBTUFLQXdEQVAwL0JnQUFBT1FFQUFBQUFBQUFId0FpUUFZQUFBQUdBQUFBQXdBQUFCOEFJMEFHQUFBQXlBQUENCkFBTUFBQUFmQUNSQUJnQUFBQVlBQUFBREFBQUFId0FsUUFZQUFBRElBQUFBQXdBQUFCOEFNRUFHQUFBQUlnQUFBQU1BQUFBZkFERkENCkJnQUFBQ0lBQUFBREFBQUFId0EwUUFZQUFBQVdBQUFBQXdBQUFCOEFOVUFHQUFBQUZnQUFBQU1BQUFBZkFEaEFCZ0FBQUNJQUFBQUQNCkFBQUFId0E1UUFZQUFBQWlBQUFBQXdBQUFBTUFka0FHQUFBQS8vLy8vd0FBQUFBREFBSlpCZ0FBQUFBQUZnQUFBQUFBQXdBSldRWUENCkFBQUNBQUFBQUFBQUFCOEFBVjBHQUFBQU5BQUFBQU1BQUFBZkFBSmRCZ0FBQURRQUFBQURBQUFBSHdEbFh3WUFBQUE4QUFBQUF3QUENCkFBTUF4bVVHQUFBQUFnQUFBQUFBQUFBQ0FlQmxCZ0FBQUJZQUFBQURBQ2dNQWdIaFpRWUFBQUFXQUFBQUF3QW9EQUlCNG1VR0FBQUENCkZnQUFBQU1BS0F3Q0FlTmxCZ0FBQUJjQUFBQURBQ2dNQ3dBQWdBWUFBQUFCQUFBQUFBQUFBQU1BQVlBR0FBQUFBQUFBQUFBQUFBQUwNCkFBS0FCZ0FBQUFBQUFBQUFBQUFBQXdBRGdBWUFBQUFBQUFBQUFBQUFBQlFBQklBR0FBQUFKd0FBQUFBQUFBQUxBQVdBQmdBQUFBQUENCkFBQUFBQUFBSHdBR2dBWUFBQUFNQUFBQUF3QUFBQjhBQjRBR0FBQUFzZ0VBQUFNQUFBQWZBQWlBQmdBQUFBWUFBQUFEQUFBQUN3QUoNCmdBWUFBQUFBQUFBQUFBQUFBQU1BQ29BR0FBQUFBQUFBQUFBQUFBQWZBQXVBQmdBQUFCSUFBQUFEQUFBQUh3QU1nQVlBQUFBZUFBQUENCkF3QUFBQXNBRFlBR0FBQUFBQUFBQUFBQUFBQWZBQTZBQmdBQUFBWUFBQUFEQUFBQUh3QVBnQVlBQUFCQ0FBQUFBd0FBQUFzQUVJQUcNCkFBQUFBQUFBQUFBQUFBQUxBQkdBQmdBQUFBQUFBQUFBQUFBQUh3QVNnQVlBQUFBU0FBQUFBd0FBQUFzQUU0QUdBQUFBQUFBQUFBQUENCkFBQUxBQlNBQmdBQUFBQUFBQUFBQUFBQUF3QVZnQVlBQUFBYkFBQUFBQUFBQUI4QUZvQUdBQUFBNUFFQUFBTUFBQUFmQUJlQUJnQUENCkFNSUJBQUFEQUFBQUh3QVlnQVlBQUFEU0F3QUFBd0FBQUI4QUdZQUdBQUFBU0FVQUFBTUFBQUFmQURjQUJnQUFBRHdBQUFBREFBQUENCkh3QWREZ0lBQUFBMEFBQUFBd0FBQUI4QVBRQUdBQUFBQ2dBQUFBTUFBQUFmQUFBUUJnQUFBQ0lFQUFBREFBQUFBZ0VKRUFZQUFBQVcNCkNnQUFBd0FvREI4QUdvQUdBQUFBTGdBQUFBTUFQUUFmQUJ1QUJnQUFBQ3dCQUFBREFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUNCaFFBQUJnQWJBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFMd0J2QUQwQVF3QnZBSElBY0FCRkFIZ0FZd0JvQUdFQWJnQm5BR1VBTHdCdkFIVUENClBRQkZBSGdBWXdCb0FHRUFiZ0JuQUdVQUlBQkJBR1FBYlFCcEFHNEFhUUJ6QUhRQWNnQmhBSFFBYVFCMkFHVUFJQUJIQUhJQWJ3QjENCkFIQUFJQUFvQUVZQVdRQkVBRWtBUWdCUEFFZ0FSZ0F5QURNQVV3QlFBRVFBVEFCVUFDa0FMd0JqQUc0QVBRQlNBR1VBWXdCcEFIQUENCmFRQmxBRzRBZEFCekFDOEFZd0J1QUQwQVF3QjVBR0lBWlFCeUFITUFaUUJqQUhVQWNnQnBBSFFBZVFCZkFFRUFkUUIwQUc4QWJRQmgNCkFIUUFhUUJ2QUc0QU1RQTBBR1lBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRU1BZVFCaUFHVUENCmNnQnpBR1VBWXdCMUFISUFhUUIwQUhrQUlBQkJBSFVBZEFCdkFHMEFZUUIwQUdrQWJ3QnVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQWcNCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBaEpzYlNJQUlNRTZlemR5eFpSRC9OQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBRU1BZVFCaUFHVUFjZ0J6QUdVQVl3QjFBSElBYVFCMEFIa0FYd0JCQUhVQWRBQnZBRzBBWVFCMEFHa0ENCmJ3QnVBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQkRBSGtBWWdCbEFISUFjd0JsQUdNQWRRQnlBR2tBZEFCNUFGOEFRUUIxQUhRQWJ3QnQNCkFHRUFkQUJwQUc4QWJnQkFBSElBWlFCekFIUUFjZ0JwQUdNQWRBQmxBR1FBTGdCakFHZ0FZUUJ6QUdVQUxnQmpBRzhBYlFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFmUEpmUnJoODFHdkUwK2dMcHFOb0VBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCQlFBQUFBQUFCUlVBQUFEL2RtUkINClJhTzFkano2TEFpcUVpMEFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU55blFNakENClFoQWF0TGtJQUNzdjRZSUJBQUFBQVFBQUFDOXZQVU52Y25CRmVHTm9ZVzVuWlM5dmRUMUZlR05vWVc1blpTQkJaRzFwYm1semRISmgNCmRHbDJaU0JIY205MWNDQW9SbGxFU1VKUFNFWXlNMU5RUkV4VUtTOWpiajFTWldOcGNHbGxiblJ6TDJOdVBVTjVZbVZ5YzJWamRYSnANCmRIbGZRWFYwYjIxaGRHbHZiakUwWmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQU55blFNakFRaEFhdExrSUFDc3Y0WUlCQUFBQUFRQUFBQzl2UFVOdmNuQkZlR05vWVc1blpTOXYNCmRUMUZlR05vWVc1blpTQkJaRzFwYm1semRISmhkR2wyWlNCSGNtOTFjQ0FvUmxsRVNVSlBTRVl5TTFOUVJFeFVLUzlqYmoxU1pXTnANCmNHbGxiblJ6TDJOdVBVTjVZbVZ5YzJWamRYSnBkSGxmUVhWMGIyMWhkR2x2YmpFMFpnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUXdCNUFHSUFaUUJ5QUhNQVpRQmpBSFVBY2dCcEFIUUENCmVRQWdBRUVBZFFCMEFHOEFiUUJoQUhRQWFRQnZBRzRBQUFBQUFBQUFBQUFBQUFBQUFBQUFBRVZZT2k5UFBVTlBVbEJGV0VOSVFVNUgNClJTOVBWVDFGV0VOSVFVNUhSU0JCUkUxSlRrbFRWRkpCVkVsV1JTQkhVazlWVUNBb1JsbEVTVUpQU0VZeU0xTlFSRXhVS1M5RFRqMVMNClJVTkpVRWxGVGxSVEwwTk9QVU5aUWtWU1UwVkRWVkpKVkZsZlFWVlVUMDFCVkVsUFRqRTBSZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFOeW5RTWpBUWhBYXRMa0lBQ3N2NFlJQkFBQUFBUUFBQUM5dlBVTnZjbkJGZUdOb1lXNW5aUzl2ZFQxRmVHTm9ZVzVuWlNCQlpHMXANCmJtbHpkSEpoZEdsMlpTQkhjbTkxY0NBb1JsbEVTVUpQU0VZeU0xTlFSRXhVS1M5amJqMVNaV05wY0dsbGJuUnpMMk51UFVONVltVnkNCmMyVmpkWEpwZEhsZlFYVjBiMjFoZEdsdmJqRTBaZ0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUM4QWJ3QTlBRU1BYndCeUFIQUFSUUI0QUdNQWFBQmhBRzRBWndCbEFDOEENCmJ3QjFBRDBBUlFCNEFHTUFhQUJoQUc0QVp3QmxBQ0FBUVFCa0FHMEFhUUJ1QUdrQWN3QjBBSElBWVFCMEFHa0FkZ0JsQUNBQVJ3QnkNCkFHOEFkUUJ3QUNBQUtBQkdBRmtBUkFCSkFFSUFUd0JJQUVZQU1nQXpBRk1BVUFCRUFFd0FWQUFwQUM4QVl3QnVBRDBBVWdCbEFHTUENCmFRQndBR2tBWlFCdUFIUUFjd0F2QUdNQWJnQTlBRU1BZVFCaUFHVUFjZ0J6QUdVQVl3QjFBSElBYVFCMEFIa0FYd0JCQUhVQWRBQnYNCkFHMEFZUUIwQUdrQWJ3QnVBREVBTkFCbUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCRkFGZ0ENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFRd0I1QUdJQVpRQnlBSE1BWlFCakFIVUFjZ0JwQUhRQWVRQWdBRUVBZFFCMEFHOEFiUUJoQUhRQWFRQnZBRzRBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUh3QUJNQVlBQUFBeUFBQUFBd0FBQUI4QUFqQUdBQUFBQmdBQUFBTUFBQUFmQUFNd0JnQUENCkFPQUFBQUFEQUFBQUFnSDJEd1lBQUFBRUFBQUFBd0F5QmdNQUZRd0dBQUFBQVFBQUFBQUFBQUFDQWY4UEJnQUFBSXdBQUFBREFESUcNCkFnRUxNQVlBQUFCekFBQUFBd0M0Q1I4QUlEb0dBQUFBTWdBQUFBTUFBQUFMQUE4T0JnQUFBQUVBQUFBQUFBQUFDd0JBT2dZQUFBQUINCkFBQUFBQUFBQUFJQitROEdBQUFBakFBQUFBTUFNZ1lDQWZkZkJnQUFBSXdBQUFBREFESUdBd0FBT1FZQUFBQUJBQUFBQUFBQUFBTUENCi9nOEdBQUFBQ0FBQUFBQUFBQUFDQVNRTUJnQUFBQndBQUFBREFETUdBZ0VsREFZQUFBQVFBQUFBQXdDdkNRTUFCVGtHQUFBQUFRQUENCkFBQUFBQUFmQVA0NUJnQUFBRndBQUFBREFBQUFId0QvT1FZQUFBQXlBQUFBQXdBQUFBSUJBVDBHQUFBQUVBQUFBQU1BcndrREFONWYNCkJnQUFBQUFBQUFBQUFBQUFBd0RmWHdZQUFBQUJBQUFBQUFBQUFCOEE1VjhHQUFBQUJBQUFBQU1BQUFBREFPdGZCZ0FBQUFBQUFBQUENCkFBQUFBd0R2WHdZQUFBQUFBQUFBQUFBQUFBTUE4bDhHQUFBQUFBQUFBQUFBQUFBREFQVmZCZ0FBQUFBQUFBQUFBQUFBSHdEMlh3WUENCkFBQXlBQUFBQXdBQUFBTUEvVjhHQUFBQUFRQUFBQUFBQUFBREFQOWZCZ0FBQUFBQUFBQUFBQUFBSHdES1pnWUFBQURnQUFBQUF3QUENCkFBTUFBREFHQUFBQUFRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUM4QWJ3QTlBRU1BYndCeUFIQUFSUUI0QUdNQWFBQmhBRzRBWndCbEFDOEFid0IxQUQwQVJRQjQNCkFHTUFhQUJoQUc0QVp3QmxBQ0FBUVFCa0FHMEFhUUJ1QUdrQWN3QjBBSElBWVFCMEFHa0FkZ0JsQUNBQVJ3QnlBRzhBZFFCd0FDQUENCktBQkdBRmtBUkFCSkFFSUFUd0JJQUVZQU1nQXpBRk1BVUFCRUFFd0FWQUFwQUM4QVl3QnVBRDBBVWdCbEFHTUFhUUJ3QUdrQVpRQnUNCkFIUUFjd0F2QUdNQWJnQTlBRllBTmdBNUFEVUFOUUF4QURBQU9RQTRBRFVBQUFBQUFFUUFaUUIyQUdVQWNnQmhBQ3dBSUFCQkFHRUENCmNnQnZBRzRBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFCekFHa0FjQUE2QUdFQVlRQnkNCkFHOEFiZ0F1QUdRQVpRQjJBR1VBY2dCaEFFQUFhZ0J3QUcwQVl3Qm9BR0VBY3dCbEFDNEFZd0J2QUcwQUFBQUFBQUFBaEpzYlNJQUkNCk1FNmV6ZHl4WlJEL05BQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFGWUFOZ0E1QURVQU5RQXhBREFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFCaEFHRUFjZ0J2QUc0QUxnQmtBR1VBZGdCbEFISUFZUUJBQUdvQWNBQnRBR01BYUFCaEFITUFaUUF1QUdNQWJ3QnQNCkFBQUFBQUFBQUFBQUFBQUFBQUFBakxPeExXdmFRRU93aXJGRFp5b2N6Z0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVGQUFBQUFBQUZGUUFBQUpQallrZ3JQUUYyZ291bUtMN2ZMd0FBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBM0tkQXlNQkNFQnEwdVFnQUt5L2hnZ0VBQUFBQUFBQUENCkwyODlRMjl5Y0VWNFkyaGhibWRsTDI5MVBVVjRZMmhoYm1kbElFRmtiV2x1YVhOMGNtRjBhWFpsSUVkeWIzVndJQ2hHV1VSSlFrOUkNClJqSXpVMUJFVEZRcEwyTnVQVkpsWTJsd2FXVnVkSE12WTI0OVZqWTVOVFV4TURrNE5RQUFBQUFBQUFBQUFBRGNwMERJd0VJUUdyUzUNCkNBQXJMK0dDQVFBQUFBQUFBQUF2YnoxRGIzSndSWGhqYUdGdVoyVXZiM1U5UlhoamFHRnVaMlVnUVdSdGFXNXBjM1J5WVhScGRtVWcNClIzSnZkWEFnS0VaWlJFbENUMGhHTWpOVFVFUk1WQ2t2WTI0OVVtVmphWEJwWlc1MGN5OWpiajFXTmprMU5URXdPVGcxQUFBQUFBQUENClJBQmxBSFlBWlFCeUFHRUFMQUFnQUVFQVlRQnlBRzhBYmdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUVWWU9pOVBQVU5QVWxCRldFTklRVTVIUlM5UFZUMUZXRU5JUVU1SFJTQkJSRTFKVGtsVFZGSkJWRWxXUlNCSFVrOVYNClVDQW9SbGxFU1VKUFNFWXlNMU5RUkV4VUtTOURUajFTUlVOSlVFbEZUbFJUTDBOT1BWWTJPVFUxTVRBNU9EVUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU55blFNakFRaEFhdExrSUFDc3Y0WUlCQUFBQUFBQUFBQzl2UFVOdmNuQkYNCmVHTm9ZVzVuWlM5dmRUMUZlR05vWVc1blpTQkJaRzFwYm1semRISmhkR2wyWlNCSGNtOTFjQ0FvUmxsRVNVSlBTRVl5TTFOUVJFeFUNCktTOWpiajFTWldOcGNHbGxiblJ6TDJOdVBWWTJPVFUxTVRBNU9EVUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBTHdCdkFEMEFRd0J2QUhJQWNBQkYNCkFIZ0FZd0JvQUdFQWJnQm5BR1VBTHdCdkFIVUFQUUJGQUhnQVl3Qm9BR0VBYmdCbkFHVUFJQUJCQUdRQWJRQnBBRzRBYVFCekFIUUENCmNnQmhBSFFBYVFCMkFHVUFJQUJIQUhJQWJ3QjFBSEFBSUFBb0FFWUFXUUJFQUVrQVFnQlBBRWdBUmdBeUFETUFVd0JRQUVRQVRBQlUNCkFDa0FMd0JqQUc0QVBRQlNBR1VBWXdCcEFIQUFhUUJsQUc0QWRBQnpBQzhBWXdCdUFEMEFWZ0EyQURrQU5RQTFBREVBTUFBNUFEZ0ENCk5RQUFBQUFBUlFCWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBUDcvLy8rQ0FRQUFnd0VBQUlRQkFBQ0ZBUUFBaGdFQUFJY0JBQUNJQVFBQWlRRUFBUDcvLy8vKy8vLy8NCi92Ly8vLzcvLy8vKy8vLy8vdi8vLy83Ly8vLysvLy8vL3YvLy8vNy8vLy8rLy8vLy92Ly8vLzcvLy8vKy8vLy8vdi8vLy83Ly8vLysNCi8vLy9td0VBQUp3QkFBQ2RBUUFBbmdFQUFKOEJBQUNnQVFBQW9RRUFBS0lCQUFDakFRQUFwQUVBQUtVQkFBQ21BUUFBL3YvLy82Z0INCkFBQ3BBUUFBcWdFQUFQNy8vLytzQVFBQS92Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCi8vLy8vLy8vLy8vLy8vLy9SQUJsQUhZQVpRQnlBR0VBTEFBZ0FFRUFZUUJ5QUc4QWJnQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUh3QUJNQVlBQUFBY0FBQUFBd0FBQUI4QUFqQUdBQUFBQmdBQUFBTUENCkFBQWZBQU13QmdBQUFMNEFBQUFEQUFBQUFnSDJEd1lBQUFBRUFBQUFBd0F5QmdNQUZRd0dBQUFBQVFBQUFBQUFBQUFDQWY4UEJnQUENCkFIc0FBQUFEQUxFSkFnRUxNQVlBQUFCaUFBQUFBd0N1Q1I4QUlEb0dBQUFBSEFBQUFBTUFBQUFMQUE4T0JnQUFBQUVBQUFBQUFBQUENCkN3QkFPZ1lBQUFBQkFBQUFBQUFBQUFJQitROEdBQUFBZXdBQUFBTUFzUWtDQWZkZkJnQUFBSHNBQUFBREFMRUpBd0FBT1FZQUFBQUENCkFBQUFBQUFBQUFNQS9nOEdBQUFBQmdBQUFBQUFBQUFDQVNRTUJnQUFBQndBQUFBREFETUdBZ0VsREFZQUFBQVFBQUFBQXdDdkNRTUENCkJUa0dBQUFBQUFBQVFBQUFBQUFmQVA0NUJnQUFBRFFBQUFBREFBQUFId0QvT1FZQUFBQVFBQUFBQXdBQUFBSUJBVDBHQUFBQUVBQUENCkFBTUFyd2tEQU41ZkJnQUFBQUFBQUFBQUFBQUFBd0RmWHdZQUFBQUFBQUFBQUFBQUFCOEE1VjhHQUFBQVBBQUFBQU1BQUFBREFPdGYNCkJnQUFBQUFBQUFBQUFBQUFBd0R2WHdZQUFBQUFBQUFBQUFBQUFBTUE4bDhHQUFBQUFBQUFBQUFBQUFBREFQVmZCZ0FBQUFBQUFBQUENCkFBQUFId0QyWHdZQUFBQWNBQUFBQXdBQUFBTUEvVjhHQUFBQUFRQUFBQUFBQUFBREFQOWZCZ0FBQUFBQUFBQUFBQUFBSHdES1pnWUENCkFBQytBQUFBQXdBQUFBTUFBREFHQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQU9saHB5a0pBQklBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFmUnNmK0R3QVJBRWNmQ0ZVRkFCTUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUE1cWVsNWc4QUVBQThyaEdZRXdBWEFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBenpaRGNKQUE4QUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBc2QrbUoNCkNRQU9BSUNGQUFBR0FCb0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFQU1Rna0FrQURBQ01Ha1VCRVFBVUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFCaUZBQUFHQUFvQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT2hRQUFCZ0FKQUlLRkFBQUdBQTBBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBbzJRUTNBMEFDQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBSjVUNllNSkFBWUFLZVJzcXhNQUdRQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUdoUUFBQmdBRkFNcVE3czBUQUJZQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUVHdmRpQWNBQkFCNWV1K3ANCkN3QUhBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFHRkFBQUcNCkFBTUFZblVWVkJNQUZRQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQURoUUFBQmdBQ0FOaUZBQUFHQUFzQVlxejd5aE1BR0FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUVJVUFBQVlBQVFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUJTRkFBQUdBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUF3QUFBQVVBQnlBRzhBY0FCbEFISUFkQUI1QUVVQWVBQnBBSE1BZEFCbEFHNEENCll3QmxBRlFBY2dCaEFHTUFhd0JsQUhJQUhBQUFBR0VBWXdCakFHVUFjQUIwQUd3QVlRQnVBR2NBZFFCaEFHY0FaUUEyQUFBQVF3QnYNCkFHNEFkZ0JsQUhJQWN3QmhBSFFBYVFCdkFHNEFTUUJ1QUdRQVpRQjRBRlFBY2dCaEFHTUFhd0JwQUc0QVp3QkZBSGdBQUFBZ0FBQUENClJBQmxBSFFBWlFCakFIUUFaUUJrQUV3QVlRQnVBR2NBZFFCaEFHY0FaUUFnQUFBQWVBQXRBRzhBY2dCcEFHY0FhUUJ1QUdFQWRBQnANCkFHNEFad0F0QUdrQWNBQlFBQUFBZUFBdEFHMEFjd0F0QUdVQWVBQmpBR2dBWVFCdUFHY0FaUUF0QUc4QWNnQm5BR0VBYmdCcEFIb0ENCllRQjBBR2tBYndCdUFDMEFZUUIxQUhRQWFBQnRBR1VBWXdCb0FHRUFiZ0JwQUhNQWJRQktBQUFBZUFBdEFHMEFjd0F0QUdVQWVBQmoNCkFHZ0FZUUJ1QUdjQVpRQXRBRzhBY2dCbkFHRUFiZ0JwQUhvQVlRQjBBR2tBYndCdUFDMEFZUUIxQUhRQWFBQnpBRzhBZFFCeUFHTUENClpRQUFBQkFBQUFCSkFITUFVd0JwQUdjQWJnQmxBR1FBR2dBQUFFa0Fjd0JTQUdVQVlRQmtBRklBWlFCakFHVUFhUUJ3QUhRQUFBQkMNCkFBQUFlQUF0QUcwQWN3QXRBR1VBZUFCakFHZ0FZUUJ1QUdjQVpRQXRBRzhBY2dCbkFHRUFiZ0JwQUhvQVlRQjBBR2tBYndCdUFDMEENCllRQjFBSFFBYUFCaEFITUFBQUFVQUFBQVV3QmxBRzRBWkFCVEFHVUFZd0IxQUhJQVpRQW1BQUFBU1FCdUFFVUFiZ0JqQUhJQWVRQncNCkFIUUFhUUJ2QUc0QVVBQnlBRzhBWXdCbEFITUFjd0FBQUN3QUFBQk1BR0VBZEFCbEFITUFkQUJOQUdVQWN3QnpBR0VBWndCbEFGY0ENCmJ3QnlBR1FBUXdCdkFIVUFiZ0IwQUNRQUFBQllBRzBBYkFCRkFIZ0FkQUJ5QUdFQVl3QjBBR1VBWkFCRkFHMEFZUUJwQUd3QWN3QXENCkFBQUFXQUJ0QUd3QVJRQjRBSFFBY2dCaEFHTUFkQUJsQUdRQVFRQmtBR1FBY2dCbEFITUFjd0JsQUhNQUFBQWtBQUFBV0FCdEFHd0ENClJRQjRBSFFBY2dCaEFHTUFkQUJsQUdRQVVBQm9BRzhBYmdCbEFITUFLQUFBQUZnQWJRQnNBRVVBZUFCMEFISUFZUUJqQUhRQVpRQmsNCkFFTUFid0J1QUhRQVlRQmpBSFFBY3dBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkZJVUFBQVlBQUFBUWhRQUFCZ0FCQUFPRkFBQUdBQUlBQVlVQUFBWUFBd0FBQUFBQUJ3QUVBQWFGQUFBR0FBVUFOQUFBQUFrQUJnQlUNCkFBQUFDd0FIQUpBQUFBQU5BQWdBRG9VQUFBWUFDUUFZaFFBQUJnQUtBTmlGQUFBR0FBc0F0QUFBQUFrQURBQ0NoUUFBQmdBTkFOZ0ENCkFBQUpBQTRBTEFFQUFBa0FEd0I4QVFBQUR3QVFBSkFCQUFBUEFCRUFzQUVBQUFrQUVnRDRBUUFBQlFBVEFCQUNBQUFSQUJRQVBBSUENCkFCTUFGUUJzQWdBQUV3QVdBSlFDQUFBVEFCY0F4QUlBQUJNQUdBRHNBZ0FBRXdBWkFJQ0ZBQUFHQUJvQWdZVUFBQVlBR3dBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBZ2dCZ0FBQUFBQXdBQUFBQUFBQUVhR0F3SUFBQUFBQU1BQUFBQUENCkFBQkdINlRyTTZoNkxrSytlM25ocVk1VXMxRGpZd3ZNbk5BUnZOc0FnRi9NemdRVGovSkI5SU1VUWFXRTd0dGFhd3YvdmRUT1BuT3oNCjJVdWpONEJqajNTU1F3aVdJeU5kYURKSG5GVk1sY3RPampNQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUENCkFBQUFBQUFBDQoNCi0tXzAwMl84MWM3NjFmZWNhYThmOTI0ZjY1ZDA3OTM4MmMxYWQwYmRlc2hhd2NvbV8tLQ0K"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsRead",
                    "data_type": "string",
                    "example_values": [
                        "true"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeSent",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:20Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_Name",
                    "data_type": "string",
                    "example_values": [
                        "Phantom"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_From.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "phantom@deshaw.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsAssociated",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sensitivity",
                    "data_type": "string",
                    "example_values": [
                        "Normal"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "56353"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsDeliveryReceiptRequested",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_IsReadReceiptRequested",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_DateTimeReceived",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05Z"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_Name",
                    "data_type": "string",
                    "example_values": [
                        "Phantom"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_MailboxType",
                    "data_type": "string",
                    "example_values": [
                        "OneOff"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_RoutingType",
                    "data_type": "string",
                    "example_values": [
                        "SMTP"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Sender.t_Mailbox.t_EmailAddress",
                    "data_type": "string",
                    "example_values": [
                        "phantom@deshaw.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_ItemId.@ChangeKey",
                    "data_type": "string",
                    "example_values": [
                        "CQAAABYAAACQhMsoV7EYSJF42ChR9SCxAAAAj9UU"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_IsInline",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_IsContactPhoto",
                    "data_type": "string",
                    "example_values": [
                        "false"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_AttachmentId.@Id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAABEgAQAHAXDtZM8ItNnDTtvcd6IAo="
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_ContentType",
                    "data_type": "string",
                    "example_values": [
                        "application/octet-stream"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_ContentId",
                    "data_type": "string",
                    "example_values": [
                        "7518226202D21C4397EE1CB1E2E540C7@deshaw.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_Size",
                    "data_type": "string",
                    "example_values": [
                        "55360"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_Name",
                    "data_type": "string",
                    "example_values": [
                        "test.msg"
                    ]
                },
                {
                    "data_path": "action_result.data.*.t_Attachments.t_FileAttachment.t_LastModifiedTime",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:05"
                    ]
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string",
                    "example_values": [
                        "Create time: 2017-10-05T20:19:58Z\nSubject: Both value are modified\nSent time: 2017-10-03T21:31:20Z"
                    ]
                },
                {
                    "data_path": "action_result.parameter.category",
                    "data_type": "string",
                    "example_values": [
                        "Yellow, Blue, Purple, red"
                    ]
                },
                {
                    "data_path": "action_result.parameter.email",
                    "data_type": "string",
                    "example_values": [
                        "phantom@deshaw.com"
                    ],
                    "contains": [
                        "email"
                    ]
                },
                {
                    "data_path": "action_result.parameter.id",
                    "data_type": "string",
                    "example_values": [
                        "AAMkAGIyMTUxYTkzLWRjYjctNDFjMi04NTAxLTQzMDFkNDhlZmI5MQBGAAAAAACxQSnX8n2GS4cunBIQ2sV7BwCQhMsoV7EYSJF42ChR9SCxAAAAYCbsAACQhMsoV7EYSJF42ChR9SCxAAAAjh8bAAA="
                    ],
                    "column_name": "Message ID",
                    "column_order": 1
                },
                {
                    "data_path": "action_result.parameter.subject",
                    "data_type": "string",
                    "example_values": [
                        "Both value are modified"
                    ]
                },
                {
                    "data_path": "action_result.summary.create_time",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-05T20:19:58Z"
                    ]
                },
                {
                    "data_path": "action_result.summary.subject",
                    "data_type": "string",
                    "example_values": [
                        "Both value are modified"
                    ]
                },
                {
                    "data_path": "action_result.summary.sent_time",
                    "data_type": "string",
                    "example_values": [
                        "2017-10-03T21:31:20Z"
                    ]
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric",
                    "example_values": [
                        1
                    ]
                }
            ],
            "versions": "EQ(*)"
        },
        {
            "action": "on poll",
            "description": "Action handler for the ingest functionality",
            "verbose": "Please see sections <a href=\"#poll_now\">POLL NOW</a> and <a href=\"#scheduled_polling\">Scheduled Polling</a> for more info on how this action is implemented by the app.",
            "type": "ingest",
            "identifier": "on_poll",
            "read_only": true,
            "parameters": {
                "start_time": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app"
                },
                "end_time": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app"
                },
                "container_id": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app"
                },
                "container_count": {
                    "data_type": "numeric",
                    "description": "Maximum number of emails to ingest",
                    "required": true,
                    "default": 100
                },
                "artifact_count": {
                    "data_type": "numeric",
                    "description": "Parameter Ignored in this app",
                    "required": false,
                    "default": 1000
                }
            },
            "output": [],
            "versions": "EQ(*)"
        }
    ]
}
